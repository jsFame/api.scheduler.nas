var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/controllers/AppController.html",[0,1.26,1,2.035]],["body/controllers/AppController.html",[0,1.801,1,2.91,2,1.247,3,0.394,4,0.394,5,0.345,6,2.852,7,0.741,8,1.653,9,3.921,10,3.921,11,2.364,12,0.033,13,3.424,14,1.174,15,3.424,16,1.653,17,3.424,18,3.424,19,0.741,20,3.424,21,0.675,22,2.414,23,2.852,24,3.424,25,3.424,26,3.424,27,2.476,28,2.476,29,3.424,30,0.394,31,0.018,32,1.359,33,2.852,34,3.424,35,3.424,36,2.195,37,2.852,38,3.424,39,1.394,40,3.424,41,3.424,42,2.476,43,3.424,44,3.424,45,0.023,46,0.023]],["title/modules/AppModule.html",[47,0.975,48,2.035]],["body/modules/AppModule.html",[1,2.634,2,1.252,3,0.266,4,0.266,5,0.233,12,0.033,19,0.822,21,0.456,22,2.42,23,1.924,27,1.67,28,1.67,30,0.266,31,0.012,36,1.481,42,1.67,45,0.018,46,0.018,47,1.262,48,3.796,49,0.917,50,1.001,51,1.203,52,1.203,53,1.001,54,2.14,55,1.203,56,1.924,57,1.924,58,1.924,59,2.658,60,2.42,61,2.937,62,2.937,63,1.791,64,1.203,65,1.095,66,1.67,67,2.487,68,2.31,69,2.31,70,1.203,71,1.924,72,1.67,73,2.865,74,2.31,75,2.31,76,2.31,77,2.62,78,1.924,79,3.52,80,2.487,81,2.31,82,3.439,83,1.67,84,2.31,85,4.11,86,1.924,87,3.439,88,2.865,89,1.924,90,2.31,91,1.924,92,1.924,93,2.31,94,2.31,95,2.31,96,3.439,97,2.365,98,1.924,99,2.31,100,2.31,101,2.31,102,2.31,103,2.31,104,2.31,105,2.31,106,3.439,107,2.31,108,2.31,109,2.31,110,2.865,111,2.31]],["title/injectables/AppService.html",[22,1.505,112,0.821]],["body/injectables/AppService.html",[3,0.319,4,0.319,5,0.28,7,0.6,8,1.43,9,3.587,10,3.587,12,0.033,14,1.18,16,1.43,19,0.571,21,0.547,22,1.862,30,0.319,31,0.02,32,1.1,39,1.206,45,0.02,46,0.02,97,1.595,112,1.016,113,1.314,114,2.004,115,2.162,116,1.314,117,2.004,118,1.806,119,2.772,120,1.009,121,1.009,122,0.717,123,0.927,124,2.162,125,2.772,126,1.777,127,2.772,128,2.84,129,1.558,130,1.595,131,2.923,132,2.309,133,3.272,134,2.309,135,3.272,136,2.004,137,2.309,138,2.004,139,2.517,140,2.309,141,2.004,142,1.201,143,3.272,144,2.045,145,1.314,146,2.309,147,2.309,148,2.309,149,2.309,150,2.309,151,2.309,152,2.004,153,2.517,154,3.272,155,2.004,156,3.272,157,2.309,158,2.309,159,2.309,160,2.309,161,2.004]],["title/controllers/AuthController.html",[0,1.26,162,2.035]],["body/controllers/AuthController.html",[0,0.877,2,0.804,3,0.254,4,0.254,5,0.223,7,0.478,8,1.211,11,1.732,12,0.033,14,0.86,16,1.211,19,0.695,21,0.436,30,0.254,31,0.011,32,0.877,37,1.84,39,0.678,42,2.405,45,0.017,46,0.017,70,1.15,97,2.997,110,2.771,115,1.897,120,1.211,121,1.211,122,0.86,123,1.112,142,1.441,145,1.047,162,2.132,163,1.84,164,1.597,165,1.84,166,2.893,167,2.405,168,1.84,169,2.997,170,4.776,171,4.453,172,2.209,173,2.209,174,3.062,175,1.84,176,3.326,177,2.209,178,1.597,179,2.209,180,2.209,181,1.84,182,2.084,183,1.84,184,1.416,185,2.132,186,2.209,187,1.597,188,1.416,189,2.209,190,2.209,191,2.209,192,2.209,193,2.209,194,1.84,195,2.209,196,2.209,197,1.84,198,3.333,199,3.326,200,3.454,201,2.209,202,1.84,203,2.209,204,3.326,205,3.326,206,2.209,207,1.84,208,3.326,209,2.209,210,2.209,211,2.209,212,2.209,213,3.326,214,2.209,215,2.209,216,2.209,217,1.84,218,3.326,219,2.209,220,2.209,221,2.209,222,3.326,223,4.001,224,1.84,225,2.209,226,2.209,227,3.326,228,2.209,229,1.84,230,2.209,231,2.209,232,2.209,233,2.209,234,2.209,235,2.209,236,2.209,237,2.209,238,1.84,239,2.209]],["title/classes/AuthDto.html",[31,0.016,169,1.827]],["body/classes/AuthDto.html",[3,0.446,4,0.446,5,0.391,7,0.838,11,2.561,12,0.032,14,1.272,19,0.563,30,0.446,31,0.025,45,0.025,46,0.025,122,1.272,129,2.255,169,2.829,240,1.536,241,3.225,242,2.561,243,3.463,244,4.5,245,3.872,246,3.872,247,3.872,248,3.872,249,4.095,250,5.402,251,4.916,252,2.8]],["title/modules/AuthModule.html",[47,0.975,59,1.654]],["body/modules/AuthModule.html",[2,1.602,3,0.376,4,0.376,5,0.33,12,0.033,19,0.833,21,0.644,30,0.376,31,0.017,45,0.023,46,0.023,47,1.528,49,1.297,50,1.415,51,1.702,52,1.702,53,1.415,54,2.591,55,1.702,59,3.17,60,2.712,63,2.292,64,1.702,65,1.549,67,3.182,72,2.363,162,3.189,182,2.98,183,2.722,253,2.722,254,2.722,255,3.268,256,3.292,257,3.268,258,3.268,259,3.268,260,2.363,261,2.722,262,3.268]],["title/injectables/AuthService.html",[112,0.821,182,1.654]],["body/injectables/AuthService.html",[3,0.222,4,0.222,5,0.194,7,0.417,8,1.091,12,0.033,14,1.073,16,1.338,19,0.722,21,0.38,30,0.222,31,0.01,32,0.764,39,1.129,45,0.015,46,0.015,70,1.003,97,2.386,112,0.775,113,0.913,115,2.499,116,0.913,117,1.393,118,1.51,120,1.51,121,1.51,122,1.073,123,1.387,124,1.42,126,2.356,129,1.459,130,1.108,142,2.06,144,1.914,145,2.129,152,1.393,166,2.166,167,2.166,168,2.496,169,2.856,174,2.356,175,2.496,182,1.56,185,2.658,187,2.166,188,2.356,197,2.496,198,1.605,238,1.605,243,3.182,260,1.393,263,1.605,264,2.996,265,2.356,266,4.146,267,1.926,268,1.926,269,2.996,270,2.115,271,1.926,272,1.92,273,1.926,274,1.926,275,2.996,276,2.996,277,1.926,278,1.926,279,1.605,280,3.676,281,1.926,282,1.926,283,2.386,284,1.926,285,1.235,286,1.926,287,1.605,288,1.605,289,1.926,290,1.108,291,1.926,292,1.926,293,1.926,294,3.454,295,1.926,296,2.996,297,1.926,298,1.926,299,4.146,300,1.926,301,1.926,302,1.605,303,1.926,304,2.996,305,2.996,306,1.926,307,1.926,308,1.926,309,1.926,310,1.926,311,1.605,312,1.605,313,3.676,314,1.926,315,1.926,316,1.926,317,1.926]],["title/classes/CreateScheduleDto.html",[31,0.016,318,1.654]],["body/classes/CreateScheduleDto.html",[3,0.541,4,0.541,5,0.474,12,0.03,30,0.541,31,0.024,45,0.028,46,0.028,240,1.864,318,2.882,319,3.913,320,3.397]],["title/classes/EditUserDto.html",[31,0.016,321,1.827]],["body/classes/EditUserDto.html",[3,0.402,4,0.402,5,0.352,7,0.756,11,2.679,12,0.032,14,1.33,19,0.508,30,0.402,31,0.024,45,0.024,46,0.024,122,1.33,123,1.95,129,2.314,240,1.386,242,2.396,243,3.297,249,3.832,252,2.526,321,2.647,322,4.553,323,2.91,324,5.143,325,5.143,326,3.494,327,3.494,328,4.6,329,3.494,330,3.494,331,5.466,332,5.143]],["title/classes/JwtGuard.html",[31,0.016,333,2.035]],["body/classes/JwtGuard.html",[3,0.5,4,0.5,5,0.438,12,0.032,14,1.123,19,0.632,30,0.5,31,0.022,45,0.027,46,0.027,116,2.697,240,1.723,333,3.384,334,3.617,335,4.341,336,4.341,337,3.139,338,2.783,339,4.341,340,3.139]],["title/injectables/JwtStrategy.html",[112,0.821,256,1.827]],["body/injectables/JwtStrategy.html",[3,0.253,4,0.253,5,0.222,7,0.476,8,1.207,12,0.033,14,1.149,16,1.207,19,0.729,21,0.433,30,0.253,31,0.011,32,0.872,39,1.364,45,0.017,46,0.017,70,1.145,77,2.295,83,1.589,91,2.76,112,0.857,113,1.042,116,1.042,118,1.617,120,1.452,121,1.452,122,1.296,123,1.334,124,1.891,129,1.762,130,1.264,142,1.728,184,1.409,185,2.847,187,3.76,188,2.124,194,1.831,200,1.589,224,2.76,242,1.726,243,2.557,256,1.907,261,1.831,265,2.124,270,1.907,272,2.124,283,1.907,290,1.264,294,1.831,302,1.831,311,1.831,312,1.831,337,1.589,338,1.409,340,1.589,341,1.831,342,3.989,343,3.989,344,3.313,345,3.313,346,1.831,347,3.313,348,3.313,349,4.441,350,2.197,351,2.197,352,4.441,353,3.313,354,3.313,355,2.197,356,2.197,357,2.197,358,1.831,359,1.589,360,2.197,361,2.197,362,2.197,363,2.197,364,2.197,365,2.197,366,2.197,367,2.197,368,3.313,369,2.197,370,2.197,371,2.197,372,2.197,373,2.197,374,2.197,375,2.197,376,3.313,377,2.197,378,2.197,379,1.831,380,2.197,381,2.197]],["title/modules/PrismaModule.html",[47,0.975,60,1.505]],["body/modules/PrismaModule.html",[3,0.426,4,0.426,5,0.374,12,0.032,19,0.695,21,0.731,30,0.426,31,0.019,45,0.025,46,0.025,47,1.625,49,1.47,50,1.605,51,1.929,52,1.929,53,1.605,54,2.756,55,2.756,60,2.858,63,2.489,64,1.929,65,1.756,118,2.295,382,3.086,383,3.086,384,3.086,385,3.705,386,4.779,387,3.705]],["title/injectables/PrismaService.html",[112,0.821,118,1.156]],["body/injectables/PrismaService.html",[3,0.291,4,0.291,5,0.255,7,0.547,8,1.338,12,0.033,14,1.23,16,1.577,19,0.63,21,0.498,30,0.291,31,0.013,39,0.776,45,0.019,46,0.019,70,1.316,112,0.951,113,1.198,115,2.642,116,1.198,118,1.338,120,1.338,121,1.338,122,0.951,123,1.229,139,1.62,142,1.095,145,2.053,153,1.62,161,1.828,185,3.048,188,1.62,287,2.105,338,2.356,340,1.828,346,3.062,388,2.105,389,4.331,390,4.755,391,3.675,392,5.271,393,2.527,394,2.527,395,3.675,396,4.755,397,2.527,398,2.527,399,1.828,400,2.527,401,2.527,402,2.527,403,2.105,404,3.675,405,2.527,406,2.527,407,3.675,408,3.608,409,2.527,410,3.608,411,2.527,412,2.527,413,2.527,414,2.527,415,2.527,416,2.527,417,2.527,418,3.675,419,2.527,420,2.527,421,2.527,422,2.527,423,2.527,424,2.527,425,2.527,426,2.527,427,2.527,428,2.527,429,2.105,430,2.527]],["title/classes/Schedule.html",[31,0.016,431,1.827]],["body/classes/Schedule.html",[3,0.544,4,0.544,5,0.477,12,0.03,30,0.544,31,0.024,45,0.029,46,0.029,240,1.874,431,3.195,432,3.935]],["title/controllers/ScheduleController.html",[0,1.26,433,2.035]],["body/controllers/ScheduleController.html",[0,0.983,2,0.902,3,0.285,4,0.285,5,0.25,7,0.536,8,1.318,11,2.61,12,0.033,14,1.296,16,1.824,19,0.685,21,0.488,30,0.285,31,0.013,32,0.983,33,2.063,39,1.539,45,0.019,46,0.019,120,1.715,121,1.715,122,1.218,123,1.575,129,2.243,164,1.791,178,2.618,181,3.566,290,3.011,318,2.726,431,1.425,433,2.321,434,2.063,435,2.321,436,3.923,437,3.016,438,3.016,439,2.618,440,2.063,441,2.476,442,2.476,443,2.063,444,3.621,445,2.476,446,2.063,447,3.621,448,2.476,449,2.063,450,3.189,451,3.621,452,2.476,453,1.587,454,2.476,455,2.063,456,2.229,457,2.063,458,2.063,459,2.618,460,2.063,461,2.476,462,2.476,463,2.476,464,2.476,465,2.476,466,2.476,467,2.476,468,2.476,469,2.476,470,2.476]],["title/modules/ScheduleModule.html",[47,0.975,61,1.827]],["body/modules/ScheduleModule.html",[2,1.76,3,0.434,4,0.434,5,0.38,12,0.032,19,0.776,21,0.743,30,0.434,31,0.019,45,0.025,46,0.025,47,1.639,49,1.496,50,1.633,51,1.963,52,1.963,53,1.633,54,2.779,55,1.963,61,3.425,63,2.517,64,1.963,65,1.787,433,3.42,456,3.1,457,3.14,471,3.14,472,3.14,473,3.77,474,3.77]],["title/injectables/ScheduleService.html",[112,0.821,456,1.654]],["body/injectables/ScheduleService.html",[3,0.304,4,0.304,5,0.267,7,0.572,8,1.383,12,0.033,14,1.33,16,2.008,19,0.646,21,0.521,30,0.304,31,0.014,39,1.579,45,0.02,46,0.02,112,0.982,113,1.253,120,1.768,121,1.768,122,1.256,123,1.624,129,2.041,144,1.377,270,3.306,290,3.08,318,2.678,431,2.959,435,2.434,436,4.045,437,3.163,438,3.163,439,2.746,440,3.163,443,3.163,446,3.163,449,3.163,450,3.173,456,1.978,458,2.203,459,2.746,460,2.203,475,2.203,476,2.644,477,2.644,478,2.644,479,2.644,480,2.644,481,4.284,482,2.644,483,2.644,484,2.644]],["title/classes/ServiceStatus.html",[31,0.016,131,2.035]],["body/classes/ServiceStatus.html",[3,0.297,4,0.297,5,0.26,7,0.559,9,1.866,10,1.866,12,0.033,14,1.242,19,0.543,21,0.509,22,1.223,30,0.297,31,0.019,32,1.024,36,2.809,39,1.146,45,0.019,46,0.019,97,2.147,112,0.965,114,1.866,115,1.223,116,1.223,118,1.359,120,0.94,121,0.94,122,1.242,123,0.863,124,1.769,128,1.866,129,1.905,130,1.485,131,3.078,132,2.15,133,4.423,134,4,135,4.67,136,3.683,137,4.243,138,2.698,139,2.391,140,2.15,141,1.866,142,1.118,143,3.108,144,1.943,145,1.223,146,2.15,147,2.15,148,2.15,149,2.15,150,2.15,151,2.15,152,1.866,153,2.391,154,3.108,155,1.866,156,3.108,157,2.15,158,2.15,159,2.15,160,2.15,161,1.866,240,1.024,242,1.943,485,2.58,486,2.58,487,3.651,488,4.382]],["title/classes/UpdateScheduleDto.html",[31,0.016,450,1.827]],["body/classes/UpdateScheduleDto.html",[3,0.502,4,0.502,5,0.44,12,0.032,19,0.77,30,0.502,31,0.022,45,0.027,46,0.027,240,1.732,318,2.273,320,3.155,338,2.797,435,2.797,450,3.047,459,3.155,489,3.635,490,4.363,491,3.635,492,3.635,493,4.363]],["title/controllers/UserController.html",[0,1.26,494,2.035]],["body/controllers/UserController.html",[0,1.015,2,0.931,3,0.294,4,0.294,5,0.258,7,0.554,8,1.35,11,2.271,12,0.033,14,1.128,16,1.588,19,0.77,21,0.504,30,0.294,31,0.013,32,1.015,39,1.339,45,0.019,46,0.019,115,2.067,120,1.588,121,1.588,122,1.128,123,1.458,126,1.639,128,1.849,145,1.212,155,1.849,164,1.849,174,3.253,178,2.68,270,3.045,272,3.065,283,3.33,321,2.751,333,1.639,359,1.849,399,1.849,453,2.376,455,3.088,494,2.376,495,2.13,496,2.13,497,3.088,498,3.088,499,3.707,500,2.13,501,2.557,502,2.557,503,2.13,504,2.557,505,2.557,506,2.557,507,2.557,508,2.557,509,2.557,510,2.557,511,1.849,512,2.557,513,2.271,514,2.13,515,2.557,516,4.36,517,2.557,518,2.557,519,2.557,520,2.557,521,2.557,522,2.557,523,1.849,524,2.557,525,2.557,526,2.557,527,2.557,528,2.557]],["title/modules/UserModule.html",[47,0.975,62,1.827]],["body/modules/UserModule.html",[2,1.627,3,0.385,4,0.385,5,0.337,12,0.033,19,0.815,21,0.659,30,0.385,31,0.017,45,0.023,46,0.023,47,1.546,49,1.327,50,1.449,51,1.742,52,1.742,53,1.449,54,2.621,55,1.742,59,3,60,2.731,62,3.518,63,2.327,64,1.742,65,1.585,67,3.231,71,2.786,72,2.418,494,3.226,513,3,514,2.786,529,2.786,530,3.344,531,2.786,532,3.344,533,3.344]],["title/injectables/UserService.html",[112,0.821,513,1.654]],["body/injectables/UserService.html",[3,0.323,4,0.323,5,0.283,7,0.608,8,1.443,12,0.033,14,1.188,16,1.443,19,0.668,21,0.554,30,0.323,31,0.014,32,1.114,39,1.217,45,0.02,46,0.02,112,1.025,113,1.331,115,2.589,116,1.331,117,2.031,118,1.817,120,1.672,121,1.672,122,1.188,123,1.536,124,1.879,126,2.54,130,1.616,142,1.717,145,1.879,174,3.5,270,3.142,272,3.373,283,2.871,285,1.8,290,2.281,321,2.871,453,2.54,497,3.302,498,3.302,500,3.302,503,3.302,513,2.064,534,2.339,535,2.808,536,2.808,537,2.808,538,2.808,539,2.808,540,3.963,541,2.808]],["title/coverage.html",[542,3.12]],["body/coverage.html",[0,1.966,1,1.771,5,0.279,6,2.302,12,0.033,22,1.31,31,0.029,45,0.02,46,0.02,53,1.197,66,2.833,77,1.59,79,1.998,112,1.405,114,2.833,118,1.006,122,0.715,131,1.771,144,1.439,162,1.771,163,2.302,169,1.59,182,1.439,229,2.302,241,2.302,256,1.59,263,2.302,318,1.439,319,2.302,320,2.833,321,1.59,322,2.302,323,2.302,333,1.771,334,2.302,341,2.302,379,5.25,388,2.302,431,1.59,432,2.302,433,1.771,434,2.302,450,1.59,456,1.439,475,2.302,489,2.302,494,1.771,495,2.302,511,1.998,513,1.439,534,2.302,542,1.998,543,1.998,544,2.763,545,2.763,546,4.552,547,4.552,548,5.586,549,4.953,550,4.953,551,2.302,552,2.302,553,2.763,554,2.302,555,3.918,556,2.763,557,2.763]],["title/dependencies.html",[50,1.652,558,2.216]],["body/dependencies.html",[12,0.033,21,0.607,27,2.227,28,3.056,31,0.022,45,0.022,46,0.022,50,1.334,70,1.604,73,2.566,98,2.566,124,1.46,184,1.974,200,2.227,252,2.227,260,2.227,265,1.974,279,2.566,337,2.227,358,3.521,399,2.227,408,2.566,491,2.566,492,2.566,559,3.08,560,3.08,561,3.08,562,3.08,563,3.08,564,4.825,565,3.08,566,3.08,567,3.08,568,3.08,569,3.08,570,3.08,571,3.08,572,3.08,573,3.08,574,3.08,575,3.08,576,3.08,577,3.08,578,3.08,579,3.08,580,3.08,581,3.08,582,3.08,583,3.08,584,3.08,585,4.534,586,3.08,587,3.08,588,3.08,589,3.08,590,3.08,591,3.08,592,3.08,593,3.08,594,3.08,595,3.08,596,2.566,597,3.08,598,3.08,599,3.08,600,3.08,601,3.08,602,3.08,603,3.08,604,3.08,605,3.08]],["title/miscellaneous/functions.html",[606,1.705,607,3.177]],["body/miscellaneous/functions.html",[7,1.034,12,0.029,45,0.029,46,0.029,53,2.566,554,3.979,606,3.061,607,3.979,608,4.776]],["title/index.html",[7,0.576,609,2.216,610,2.216]],["body/index.html",[2,1.145,12,0.031,45,0.016,46,0.016,47,0.63,49,1.248,77,2.2,80,3.099,83,2.764,86,1.708,88,1.708,89,1.708,92,2.619,124,1.49,136,2.273,139,2.015,141,1.483,144,1.068,165,1.708,166,1.483,167,1.483,202,1.708,207,1.708,217,1.708,240,0.814,244,1.708,265,1.314,283,1.18,285,2.015,403,2.619,410,1.708,429,1.708,435,2.015,439,1.483,453,1.314,496,3.185,523,2.273,542,1.483,543,2.764,585,1.708,596,3.185,611,1.708,612,2.051,613,2.051,614,2.051,615,2.051,616,3.144,617,2.051,618,2.051,619,2.051,620,2.051,621,2.051,622,2.051,623,2.051,624,2.051,625,2.051,626,2.051,627,2.051,628,2.051,629,2.051,630,2.051,631,2.051,632,2.051,633,2.051,634,1.708,635,3.144,636,2.051,637,2.051,638,2.051,639,2.051,640,1.708,641,2.051,642,1.708,643,3.144,644,5.077,645,3.144,646,3.144,647,2.051,648,2.051,649,2.051,650,2.051,651,4.286,652,3.823,653,2.051,654,2.051,655,2.051,656,2.051,657,4.622,658,2.051,659,2.051,660,2.051,661,2.051,662,2.051,663,2.051,664,2.051,665,2.051,666,2.051,667,3.144,668,2.051,669,2.051,670,2.051,671,2.051,672,3.823,673,2.051,674,2.051,675,2.051,676,2.051,677,2.051,678,2.051,679,2.051,680,3.144,681,2.051,682,1.708,683,2.051,684,2.051,685,2.051,686,2.051,687,2.051,688,2.051,689,2.051,690,2.051,691,2.051,692,2.051,693,1.708,694,2.051,695,2.051,696,2.051,697,2.051,698,2.051,699,2.051,700,2.051,701,2.051,702,3.144,703,3.823,704,2.051,705,2.051,706,2.051,707,2.051,708,2.051,709,2.051,710,2.051,711,2.051,712,2.051,713,2.051,714,2.051,715,2.051,716,2.051,717,2.051,718,2.051,719,2.051,720,2.051,721,2.051,722,5.238,723,2.051,724,2.051,725,2.051,726,1.708,727,2.051,728,2.051,729,2.051,730,4.877,731,2.051,732,2.051,733,2.051,734,2.051,735,2.051,736,2.051,737,2.051,738,1.483,739,2.051]],["title/license.html",[609,2.216,610,2.216,740,1.924]],["body/license.html",[12,0.023,45,0.023,46,0.023,65,1.543,153,2.087,184,2.087,288,3.656,481,2.712,543,2.354,634,5.014,693,2.712,726,3.656,738,2.354,740,2.354,741,4.965,742,3.255,743,3.255,744,3.255,745,4.389,746,3.255,747,3.255,748,3.255,749,3.255,750,3.255,751,3.255,752,3.255,753,3.255,754,4.965,755,3.255,756,4.389,757,3.255,758,3.255,759,3.255,760,3.255,761,3.255,762,3.255,763,3.255,764,3.255,765,3.255,766,4.389,767,3.255,768,3.255,769,3.255,770,3.255,771,3.255,772,3.255,773,3.255,774,4.389,775,4.389,776,3.255,777,3.255,778,3.255,779,3.255,780,3.255,781,3.255,782,3.255,783,3.255,784,3.255,785,3.255,786,3.255,787,3.255,788,3.255,789,3.255,790,3.255,791,3.255,792,3.255,793,3.255,794,3.255,795,3.255,796,3.255,797,3.255,798,3.255,799,3.255,800,3.255,801,3.255,802,3.255]],["title/modules.html",[49,1.712]],["body/modules.html",[12,0.027,45,0.027,46,0.027,48,2.783,49,1.723,59,2.261,60,2.058,61,2.498,62,2.498,803,6.064,804,6.064,805,6.064,806,6.064]],["title/overview.html",[807,3.595]],["body/overview.html",[2,1.102,12,0.032,22,2.266,45,0.021,46,0.021,47,0.929,48,3.916,49,1.201,50,1.311,51,1.576,52,1.576,53,1.311,54,1.576,55,1.576,56,2.521,57,2.521,58,2.521,59,3.124,60,2.768,61,3.112,62,3.41,63,2.175,64,1.576,65,1.435,113,1.435,118,2.086,182,2.49,240,1.201,253,2.521,254,2.521,256,2.751,382,2.521,383,2.521,384,2.521,456,2.49,471,2.521,472,2.521,513,2.49,529,2.521,531,2.521,807,2.521,808,3.026,809,3.026,810,3.026,811,3.026]],["title/properties.html",[242,1.986,558,2.216]],["body/properties.html",[12,0.033,45,0.027,46,0.027,242,2.284,523,3.171,611,3.654,640,3.654,642,3.654,682,3.654,738,3.171,740,3.171,812,4.386,813,4.386,814,4.386,815,5.311,816,4.386,817,4.386,818,4.386,819,4.386]],["title/miscellaneous/variables.html",[606,1.705,820,3.177]],["body/miscellaneous/variables.html",[7,0.846,12,0.033,36,3.477,39,1.519,45,0.025,46,0.025,66,2.825,77,2.845,78,3.255,79,3.575,80,2.825,122,1.011,129,1.962,138,2.825,142,1.692,285,2.504,359,2.825,487,4.519,511,3.575,551,3.255,552,4.119,606,2.504,820,3.255,821,4.944,822,3.907,823,3.907,824,3.907,825,3.907,826,3.907,827,3.907,828,3.907]]],"invertedIndex":[["",{"_index":12,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthDto.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateScheduleDto.html":{},"classes/EditUserDto.html":{},"classes/JwtGuard.html":{},"injectables/JwtStrategy.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/Schedule.html":{},"controllers/ScheduleController.html":{},"modules/ScheduleModule.html":{},"injectables/ScheduleService.html":{},"classes/ServiceStatus.html":{},"classes/UpdateScheduleDto.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":379,"title":{},"body":{"injectables/JwtStrategy.html":{},"coverage.html":{}}}],["0.1.0",{"_index":813,"title":{},"body":{"properties.html":{}}}],["0.1.13",{"_index":600,"title":{},"body":{"dependencies.html":{}}}],["0.14.0",{"_index":580,"title":{},"body":{"dependencies.html":{}}}],["0.30.3",{"_index":576,"title":{},"body":{"dependencies.html":{}}}],["0.5.1",{"_index":579,"title":{},"body":{"dependencies.html":{}}}],["0.6.0",{"_index":594,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":548,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":553,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":546,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":550,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":549,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":555,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":37,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{}}}],["1.2.1",{"_index":590,"title":{},"body":{"dependencies.html":{}}}],["1.4.6",{"_index":584,"title":{},"body":{"dependencies.html":{}}}],["1.7.4",{"_index":582,"title":{},"body":{"dependencies.html":{}}}],["1.78.0",{"_index":575,"title":{},"body":{"dependencies.html":{}}}],["10.0.0",{"_index":571,"title":{},"body":{"dependencies.html":{}}}],["10.0.5",{"_index":564,"title":{},"body":{"dependencies.html":{}}}],["10.1.0",{"_index":569,"title":{},"body":{"dependencies.html":{}}}],["1000",{"_index":42,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{}}}],["12.0.7",{"_index":562,"title":{},"body":{"dependencies.html":{}}}],["12.0.8",{"_index":568,"title":{},"body":{"dependencies.html":{}}}],["15.7.2",{"_index":586,"title":{},"body":{"dependencies.html":{}}}],["17.9.2",{"_index":593,"title":{},"body":{"dependencies.html":{}}}],["18.0.2",{"_index":597,"title":{},"body":{"dependencies.html":{}}}],["19.0.0",{"_index":605,"title":{},"body":{"dependencies.html":{}}}],["1hr",{"_index":317,"title":{},"body":{"injectables/AuthService.html":{}}}],["2.0.1",{"_index":563,"title":{},"body":{"dependencies.html":{}}}],["2.0.2",{"_index":570,"title":{},"body":{"dependencies.html":{}}}],["2023",{"_index":743,"title":{},"body":{"license.html":{}}}],["3.0.0",{"_index":565,"title":{},"body":{"dependencies.html":{}}}],["3.6.1",{"_index":588,"title":{},"body":{"dependencies.html":{}}}],["3600000",{"_index":209,"title":{},"body":{"controllers/AuthController.html":{}}}],["4",{"_index":809,"title":{},"body":{"overview.html":{}}}],["4.0.1",{"_index":595,"title":{},"body":{"dependencies.html":{}}}],["4.16.2",{"_index":573,"title":{},"body":{"dependencies.html":{}}}],["4.7.5",{"_index":560,"title":{},"body":{"dependencies.html":{}}}],["401",{"_index":370,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["5",{"_index":808,"title":{},"body":{"overview.html":{}}}],["5.2.3",{"_index":577,"title":{},"body":{"dependencies.html":{}}}],["6",{"_index":810,"title":{},"body":{"overview.html":{}}}],["60",{"_index":110,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{}}}],["7",{"_index":811,"title":{},"body":{"overview.html":{}}}],["7.8.1",{"_index":602,"title":{},"body":{"dependencies.html":{}}}],["9.0.0",{"_index":592,"title":{},"body":{"dependencies.html":{}}}],["above",{"_index":773,"title":{},"body":{"license.html":{}}}],["access_token",{"_index":314,"title":{},"body":{"injectables/AuthService.html":{}}}],["accessible",{"_index":214,"title":{},"body":{"controllers/AuthController.html":{}}}],["action",{"_index":481,"title":{},"body":{"injectables/ScheduleService.html":{},"license.html":{}}}],["actual",{"_index":234,"title":{},"body":{"controllers/AuthController.html":{}}}],["adds",{"_index":482,"title":{},"body":{"injectables/ScheduleService.html":{}}}],["allows",{"_index":655,"title":{},"body":{"index.html":{}}}],["and/or",{"_index":764,"title":{},"body":{"license.html":{}}}],["angular",{"_index":709,"title":{},"body":{"index.html":{}}}],["api",{"_index":523,"title":{},"body":{"controllers/UserController.html":{},"index.html":{},"properties.html":{}}}],["api.scheduler.nas",{"_index":611,"title":{},"body":{"index.html":{},"properties.html":{}}}],["apollo/server",{"_index":559,"title":{},"body":{"dependencies.html":{}}}],["app",{"_index":139,"title":{},"body":{"injectables/AppService.html":{},"injectables/PrismaService.html":{},"classes/ServiceStatus.html":{},"index.html":{}}}],["app.close",{"_index":417,"title":{},"body":{"injectables/PrismaService.html":{}}}],["app.controller",{"_index":68,"title":{},"body":{"modules/AppModule.html":{}}}],["app.service",{"_index":23,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["appcontroller",{"_index":1,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["appended",{"_index":374,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["appmodule",{"_index":48,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appservice",{"_index":22,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/ServiceStatus.html":{},"coverage.html":{},"overview.html":{}}}],["architecture",{"_index":671,"title":{},"body":{"index.html":{}}}],["argon",{"_index":278,"title":{},"body":{"injectables/AuthService.html":{}}}],["argon.hash(dto.password",{"_index":281,"title":{},"body":{"injectables/AuthService.html":{}}}],["argon.verify(user.hash",{"_index":306,"title":{},"body":{"injectables/AuthService.html":{}}}],["argon2",{"_index":279,"title":{},"body":{"injectables/AuthService.html":{},"dependencies.html":{}}}],["arising",{"_index":801,"title":{},"body":{"license.html":{}}}],["associated",{"_index":752,"title":{},"body":{"license.html":{}}}],["async",{"_index":115,"title":{},"body":{"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/PrismaService.html":{},"classes/ServiceStatus.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["auth",{"_index":165,"title":{},"body":{"controllers/AuthController.html":{},"index.html":{}}}],["auth.controller",{"_index":258,"title":{},"body":{"modules/AuthModule.html":{}}}],["auth.service",{"_index":183,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{}}}],["auth/auth.module",{"_index":71,"title":{},"body":{"modules/AppModule.html":{},"modules/UserModule.html":{}}}],["auth/decorator",{"_index":512,"title":{},"body":{"controllers/UserController.html":{}}}],["auth/guard",{"_index":510,"title":{},"body":{"controllers/UserController.html":{}}}],["authcontroller",{"_index":162,"title":{"controllers/AuthController.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"coverage.html":{}}}],["authdto",{"_index":169,"title":{"classes/AuthDto.html":{}},"body":{"controllers/AuthController.html":{},"classes/AuthDto.html":{},"injectables/AuthService.html":{},"coverage.html":{}}}],["authentication",{"_index":695,"title":{},"body":{"index.html":{}}}],["authguard",{"_index":336,"title":{},"body":{"classes/JwtGuard.html":{}}}],["authguard('jwt",{"_index":339,"title":{},"body":{"classes/JwtGuard.html":{}}}],["authmodule",{"_index":59,"title":{"modules/AuthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["author",{"_index":818,"title":{},"body":{"properties.html":{}}}],["authorization",{"_index":696,"title":{},"body":{"index.html":{}}}],["authors",{"_index":791,"title":{},"body":{"license.html":{}}}],["authservice",{"_index":182,"title":{"injectables/AuthService.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"coverage.html":{},"overview.html":{}}}],["await",{"_index":145,"title":{},"body":{"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/PrismaService.html":{},"classes/ServiceStatus.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["between",{"_index":690,"title":{},"body":{"index.html":{}}}],["body",{"_index":178,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ScheduleController.html":{},"controllers/UserController.html":{}}}],["boolean",{"_index":134,"title":{},"body":{"injectables/AppService.html":{},"classes/ServiceStatus.html":{}}}],["bootstrap",{"_index":53,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PrismaModule.html":{},"modules/ScheduleModule.html":{},"modules/UserModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["break",{"_index":87,"title":{},"body":{"modules/AppModule.html":{}}}],["browse",{"_index":806,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":803,"title":{},"body":{"modules.html":{}}}],["bugs",{"_index":816,"title":{},"body":{"properties.html":{}}}],["built",{"_index":643,"title":{},"body":{"index.html":{}}}],["business",{"_index":678,"title":{},"body":{"index.html":{}}}],["c",{"_index":742,"title":{},"body":{"license.html":{}}}],["cache",{"_index":98,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["cacheinterceptor",{"_index":24,"title":{},"body":{"controllers/AppController.html":{}}}],["cachekey",{"_index":25,"title":{},"body":{"controllers/AppController.html":{}}}],["cachekey('home",{"_index":34,"title":{},"body":{"controllers/AppController.html":{}}}],["cachemodule",{"_index":75,"title":{},"body":{"modules/AppModule.html":{}}}],["cachemodule.register",{"_index":111,"title":{},"body":{"modules/AppModule.html":{}}}],["cachettl",{"_index":26,"title":{},"body":{"controllers/AppController.html":{}}}],["cachettl(5",{"_index":41,"title":{},"body":{"controllers/AppController.html":{}}}],["cachettl(number.max_safe_integer",{"_index":35,"title":{},"body":{"controllers/AppController.html":{}}}],["cachettl(undefined)@get('health",{"_index":13,"title":{},"body":{"controllers/AppController.html":{}}}],["case",{"_index":82,"title":{},"body":{"modules/AppModule.html":{}}}],["catch",{"_index":293,"title":{},"body":{"injectables/AuthService.html":{}}}],["catch((err",{"_index":151,"title":{},"body":{"injectables/AppService.html":{},"classes/ServiceStatus.html":{}}}],["charge",{"_index":749,"title":{},"body":{"license.html":{}}}],["claim",{"_index":794,"title":{},"body":{"license.html":{}}}],["class",{"_index":31,"title":{"classes/AuthDto.html":{},"classes/CreateScheduleDto.html":{},"classes/EditUserDto.html":{},"classes/JwtGuard.html":{},"classes/Schedule.html":{},"classes/ServiceStatus.html":{},"classes/UpdateScheduleDto.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthDto.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateScheduleDto.html":{},"classes/EditUserDto.html":{},"classes/JwtGuard.html":{},"injectables/JwtStrategy.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/Schedule.html":{},"controllers/ScheduleController.html":{},"modules/ScheduleModule.html":{},"injectables/ScheduleService.html":{},"classes/ServiceStatus.html":{},"classes/UpdateScheduleDto.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":240,"title":{},"body":{"classes/AuthDto.html":{},"classes/CreateScheduleDto.html":{},"classes/EditUserDto.html":{},"classes/JwtGuard.html":{},"classes/Schedule.html":{},"classes/ServiceStatus.html":{},"classes/UpdateScheduleDto.html":{},"index.html":{},"overview.html":{}}}],["cleandb",{"_index":390,"title":{},"body":{"injectables/PrismaService.html":{}}}],["clear",{"_index":227,"title":{},"body":{"controllers/AuthController.html":{}}}],["cluster_appmodule",{"_index":56,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":57,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":58,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":253,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_imports",{"_index":255,"title":{},"body":{"modules/AuthModule.html":{}}}],["cluster_authmodule_providers",{"_index":254,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_prismamodule",{"_index":382,"title":{},"body":{"modules/PrismaModule.html":{},"overview.html":{}}}],["cluster_prismamodule_exports",{"_index":384,"title":{},"body":{"modules/PrismaModule.html":{},"overview.html":{}}}],["cluster_prismamodule_providers",{"_index":383,"title":{},"body":{"modules/PrismaModule.html":{},"overview.html":{}}}],["cluster_schedulemodule",{"_index":471,"title":{},"body":{"modules/ScheduleModule.html":{},"overview.html":{}}}],["cluster_schedulemodule_providers",{"_index":472,"title":{},"body":{"modules/ScheduleModule.html":{},"overview.html":{}}}],["cluster_usermodule",{"_index":529,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["cluster_usermodule_imports",{"_index":530,"title":{},"body":{"modules/UserModule.html":{}}}],["cluster_usermodule_providers",{"_index":531,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["code",{"_index":295,"title":{},"body":{"injectables/AuthService.html":{}}}],["college",{"_index":614,"title":{},"body":{"index.html":{}}}],["compodoc",{"_index":706,"title":{},"body":{"index.html":{}}}],["compression",{"_index":581,"title":{},"body":{"dependencies.html":{}}}],["computer",{"_index":628,"title":{},"body":{"index.html":{}}}],["concerns",{"_index":675,"title":{},"body":{"index.html":{}}}],["conditions",{"_index":772,"title":{},"body":{"license.html":{}}}],["config",{"_index":188,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{}}}],["config.get('database_url",{"_index":425,"title":{},"body":{"injectables/PrismaService.html":{}}}],["config.get('jwt_secret",{"_index":367,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["config.get('mode",{"_index":361,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["configmodule",{"_index":69,"title":{},"body":{"modules/AppModule.html":{}}}],["configmodule.forroot",{"_index":94,"title":{},"body":{"modules/AppModule.html":{}}}],["configs",{"_index":694,"title":{},"body":{"index.html":{}}}],["configservice",{"_index":185,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{}}}],["configuration",{"_index":692,"title":{},"body":{"index.html":{}}}],["connect",{"_index":147,"title":{},"body":{"injectables/AppService.html":{},"classes/ServiceStatus.html":{}}}],["connected",{"_index":149,"title":{},"body":{"injectables/AppService.html":{},"classes/ServiceStatus.html":{}}}],["connecting",{"_index":409,"title":{},"body":{"injectables/PrismaService.html":{}}}],["connection",{"_index":153,"title":{},"body":{"injectables/AppService.html":{},"injectables/PrismaService.html":{},"classes/ServiceStatus.html":{},"license.html":{}}}],["connectors/postgresql#configuring",{"_index":421,"title":{},"body":{"injectables/PrismaService.html":{}}}],["console.count('db",{"_index":148,"title":{},"body":{"injectables/AppService.html":{},"classes/ServiceStatus.html":{}}}],["console.debug(req.cookies",{"_index":377,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["console.error",{"_index":152,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"classes/ServiceStatus.html":{}}}],["console.info(new",{"_index":407,"title":{},"body":{"injectables/PrismaService.html":{}}}],["console.log",{"_index":538,"title":{},"body":{"injectables/UserService.html":{}}}],["console.log('extracted",{"_index":380,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["console.warn(new",{"_index":412,"title":{},"body":{"injectables/PrismaService.html":{}}}],["const",{"_index":142,"title":{},"body":{"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"classes/ServiceStatus.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["constructor",{"_index":116,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"classes/JwtGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"classes/ServiceStatus.html":{},"injectables/UserService.html":{}}}],["constructor(config",{"_index":346,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{}}}],["constructor(ok",{"_index":485,"title":{},"body":{"classes/ServiceStatus.html":{}}}],["constructor(prisma",{"_index":117,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/UserService.html":{}}}],["constructor(private",{"_index":32,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"controllers/ScheduleController.html":{},"classes/ServiceStatus.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["constructor(public",{"_index":132,"title":{},"body":{"injectables/AppService.html":{},"classes/ServiceStatus.html":{}}}],["contract",{"_index":798,"title":{},"body":{"license.html":{}}}],["controller",{"_index":0,"title":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/ScheduleController.html":{},"controllers/UserController.html":{}},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/ScheduleController.html":{},"controllers/UserController.html":{},"coverage.html":{}}}],["controller('auth",{"_index":186,"title":{},"body":{"controllers/AuthController.html":{}}}],["controller('schedule",{"_index":461,"title":{},"body":{"controllers/ScheduleController.html":{}}}],["controller('users",{"_index":515,"title":{},"body":{"controllers/UserController.html":{}}}],["controllers",{"_index":2,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"controllers/ScheduleController.html":{},"modules/ScheduleModule.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"index.html":{},"overview.html":{}}}],["cookie",{"_index":200,"title":{},"body":{"controllers/AuthController.html":{},"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["cookiename",{"_index":230,"title":{},"body":{"controllers/AuthController.html":{}}}],["cookies",{"_index":223,"title":{},"body":{"controllers/AuthController.html":{}}}],["copies",{"_index":766,"title":{},"body":{"license.html":{}}}],["copy",{"_index":726,"title":{},"body":{"index.html":{},"license.html":{}}}],["copyright",{"_index":741,"title":{},"body":{"license.html":{}}}],["coverage",{"_index":542,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["create",{"_index":435,"title":{},"body":{"controllers/ScheduleController.html":{},"injectables/ScheduleService.html":{},"classes/UpdateScheduleDto.html":{},"index.html":{}}}],["create(@body",{"_index":462,"title":{},"body":{"controllers/ScheduleController.html":{}}}],["create(createscheduledto",{"_index":440,"title":{},"body":{"controllers/ScheduleController.html":{},"injectables/ScheduleService.html":{}}}],["created",{"_index":663,"title":{},"body":{"index.html":{}}}],["createdat",{"_index":291,"title":{},"body":{"injectables/AuthService.html":{}}}],["createparamdecorator((data",{"_index":823,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createscheduledto",{"_index":318,"title":{"classes/CreateScheduleDto.html":{}},"body":{"classes/CreateScheduleDto.html":{},"controllers/ScheduleController.html":{},"injectables/ScheduleService.html":{},"classes/UpdateScheduleDto.html":{},"coverage.html":{}}}],["credentials",{"_index":304,"title":{},"body":{"injectables/AuthService.html":{}}}],["ctx",{"_index":824,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ctx.switchtohttp().getrequest",{"_index":826,"title":{},"body":{"miscellaneous/variables.html":{}}}],["damages",{"_index":795,"title":{},"body":{"license.html":{}}}],["data",{"_index":285,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["database",{"_index":410,"title":{},"body":{"injectables/PrismaService.html":{},"index.html":{}}}],["database_url",{"_index":105,"title":{},"body":{"modules/AppModule.html":{}}}],["datasources",{"_index":423,"title":{},"body":{"injectables/PrismaService.html":{}}}],["date",{"_index":408,"title":{},"body":{"injectables/PrismaService.html":{},"dependencies.html":{}}}],["db",{"_index":161,"title":{},"body":{"injectables/AppService.html":{},"injectables/PrismaService.html":{},"classes/ServiceStatus.html":{}}}],["dbstatus",{"_index":143,"title":{},"body":{"injectables/AppService.html":{},"classes/ServiceStatus.html":{}}}],["dbstatus.debug",{"_index":160,"title":{},"body":{"injectables/AppService.html":{},"classes/ServiceStatus.html":{}}}],["dbstatus.ok",{"_index":157,"title":{},"body":{"injectables/AppService.html":{},"classes/ServiceStatus.html":{}}}],["dbstatus.status",{"_index":159,"title":{},"body":{"injectables/AppService.html":{},"classes/ServiceStatus.html":{}}}],["deal",{"_index":753,"title":{},"body":{"license.html":{}}}],["dealings",{"_index":802,"title":{},"body":{"license.html":{}}}],["dean's",{"_index":622,"title":{},"body":{"index.html":{}}}],["debug",{"_index":137,"title":{},"body":{"injectables/AppService.html":{},"classes/ServiceStatus.html":{}}}],["declarations",{"_index":52,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PrismaModule.html":{},"modules/ScheduleModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["decorators",{"_index":11,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"classes/AuthDto.html":{},"classes/EditUserDto.html":{},"controllers/ScheduleController.html":{},"controllers/UserController.html":{}}}],["default",{"_index":36,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"classes/ServiceStatus.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":14,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthDto.html":{},"injectables/AuthService.html":{},"classes/EditUserDto.html":{},"classes/JwtGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"controllers/ScheduleController.html":{},"injectables/ScheduleService.html":{},"classes/ServiceStatus.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["delete",{"_index":453,"title":{},"body":{"controllers/ScheduleController.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"index.html":{}}}],["delete(':id",{"_index":447,"title":{},"body":{"controllers/ScheduleController.html":{}}}],["deleted",{"_index":527,"title":{},"body":{"controllers/UserController.html":{}}}],["deleteuser",{"_index":497,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["deleteuser(@getuser('userid",{"_index":526,"title":{},"body":{"controllers/UserController.html":{}}}],["deleteuser(userid",{"_index":500,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["dependencies",{"_index":50,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PrismaModule.html":{},"modules/ScheduleModule.html":{},"modules/UserModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":640,"title":{},"body":{"index.html":{},"properties.html":{}}}],["dev",{"_index":91,"title":{},"body":{"modules/AppModule.html":{},"injectables/JwtStrategy.html":{}}}],["dev/test/prod",{"_index":725,"title":{},"body":{"index.html":{}}}],["development",{"_index":92,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["disconnected",{"_index":415,"title":{},"body":{"injectables/PrismaService.html":{}}}],["disconnecting",{"_index":413,"title":{},"body":{"injectables/PrismaService.html":{}}}],["distribute",{"_index":762,"title":{},"body":{"license.html":{}}}],["disturbing",{"_index":627,"title":{},"body":{"index.html":{}}}],["docs",{"_index":714,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":543,"title":{},"body":{"coverage.html":{},"index.html":{},"license.html":{}}}],["doesn't",{"_index":401,"title":{},"body":{"injectables/PrismaService.html":{}}}],["domain",{"_index":205,"title":{},"body":{"controllers/AuthController.html":{}}}],["domain.com",{"_index":233,"title":{},"body":{"controllers/AuthController.html":{}}}],["done",{"_index":666,"title":{},"body":{"index.html":{}}}],["down",{"_index":428,"title":{},"body":{"injectables/PrismaService.html":{}}}],["dto",{"_index":174,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["dto.email",{"_index":197,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["dto.password",{"_index":307,"title":{},"body":{"injectables/AuthService.html":{}}}],["dto/create",{"_index":458,"title":{},"body":{"controllers/ScheduleController.html":{},"injectables/ScheduleService.html":{}}}],["dto/update",{"_index":460,"title":{},"body":{"controllers/ScheduleController.html":{},"injectables/ScheduleService.html":{}}}],["due",{"_index":155,"title":{},"body":{"injectables/AppService.html":{},"classes/ServiceStatus.html":{},"controllers/UserController.html":{}}}],["during",{"_index":613,"title":{},"body":{"index.html":{}}}],["e.g",{"_index":203,"title":{},"body":{"controllers/AuthController.html":{}}}],["e2e",{"_index":403,"title":{},"body":{"injectables/PrismaService.html":{},"index.html":{}}}],["easy",{"_index":639,"title":{},"body":{"index.html":{}}}],["edituser",{"_index":498,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["edituser(@getuser('userid",{"_index":519,"title":{},"body":{"controllers/UserController.html":{}}}],["edituser(userid",{"_index":503,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["edituserdto",{"_index":321,"title":{"classes/EditUserDto.html":{}},"body":{"classes/EditUserDto.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["em",{"_index":716,"title":{},"body":{"index.html":{}}}],["email",{"_index":243,"title":{},"body":{"classes/AuthDto.html":{},"injectables/AuthService.html":{},"classes/EditUserDto.html":{},"injectables/JwtStrategy.html":{}}}],["enableshutdownhooks",{"_index":391,"title":{},"body":{"injectables/PrismaService.html":{}}}],["enableshutdownhooks(app",{"_index":395,"title":{},"body":{"injectables/PrismaService.html":{}}}],["engineering",{"_index":630,"title":{},"body":{"index.html":{}}}],["env",{"_index":80,"title":{},"body":{"modules/AppModule.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["env.example",{"_index":727,"title":{},"body":{"index.html":{}}}],["env.local",{"_index":93,"title":{},"body":{"modules/AppModule.html":{}}}],["env.prod",{"_index":90,"title":{},"body":{"modules/AppModule.html":{}}}],["env.test",{"_index":84,"title":{},"body":{"modules/AppModule.html":{}}}],["envfile",{"_index":79,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["envfilepath",{"_index":95,"title":{},"body":{"modules/AppModule.html":{}}}],["err",{"_index":156,"title":{},"body":{"injectables/AppService.html":{},"classes/ServiceStatus.html":{}}}],["error",{"_index":294,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["error.code",{"_index":296,"title":{},"body":{"injectables/AuthService.html":{}}}],["etc",{"_index":207,"title":{},"body":{"controllers/AuthController.html":{},"index.html":{}}}],["event",{"_index":790,"title":{},"body":{"license.html":{}}}],["events",{"_index":406,"title":{},"body":{"injectables/PrismaService.html":{}}}],["everyone's",{"_index":637,"title":{},"body":{"index.html":{}}}],["executioncontext",{"_index":825,"title":{},"body":{"miscellaneous/variables.html":{}}}],["expiration",{"_index":204,"title":{},"body":{"controllers/AuthController.html":{}}}],["expiresin",{"_index":316,"title":{},"body":{"injectables/AuthService.html":{}}}],["export",{"_index":30,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthDto.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateScheduleDto.html":{},"classes/EditUserDto.html":{},"classes/JwtGuard.html":{},"injectables/JwtStrategy.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/Schedule.html":{},"controllers/ScheduleController.html":{},"modules/ScheduleModule.html":{},"injectables/ScheduleService.html":{},"classes/ServiceStatus.html":{},"classes/UpdateScheduleDto.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["exports",{"_index":55,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PrismaModule.html":{},"modules/ScheduleModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["express",{"_index":184,"title":{},"body":{"controllers/AuthController.html":{},"injectables/JwtStrategy.html":{},"dependencies.html":{},"license.html":{}}}],["extends",{"_index":338,"title":{},"body":{"classes/JwtGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"classes/UpdateScheduleDto.html":{}}}],["extractjwt",{"_index":357,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["extractjwt.fromauthheaderasbearertoken",{"_index":364,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["extractjwt.fromextractors([jwtstrategy.extractjwtfromcookie",{"_index":363,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["extractjwtfromcookie",{"_index":344,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["extractjwtfromcookie(req",{"_index":348,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["failed",{"_index":154,"title":{},"body":{"injectables/AppService.html":{},"classes/ServiceStatus.html":{}}}],["false",{"_index":158,"title":{},"body":{"injectables/AppService.html":{},"classes/ServiceStatus.html":{}}}],["features",{"_index":660,"title":{},"body":{"index.html":{}}}],["file",{"_index":5,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthDto.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateScheduleDto.html":{},"classes/EditUserDto.html":{},"classes/JwtGuard.html":{},"injectables/JwtStrategy.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/Schedule.html":{},"controllers/ScheduleController.html":{},"modules/ScheduleModule.html":{},"injectables/ScheduleService.html":{},"classes/ServiceStatus.html":{},"classes/UpdateScheduleDto.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["files",{"_index":693,"title":{},"body":{"index.html":{},"license.html":{}}}],["fill",{"_index":728,"title":{},"body":{"index.html":{}}}],["find",{"_index":715,"title":{},"body":{"index.html":{}}}],["findall",{"_index":436,"title":{},"body":{"controllers/ScheduleController.html":{},"injectables/ScheduleService.html":{}}}],["findone",{"_index":437,"title":{},"body":{"controllers/ScheduleController.html":{},"injectables/ScheduleService.html":{}}}],["findone(@param('id",{"_index":465,"title":{},"body":{"controllers/ScheduleController.html":{}}}],["findone(id",{"_index":443,"title":{},"body":{"controllers/ScheduleController.html":{},"injectables/ScheduleService.html":{}}}],["first",{"_index":650,"title":{},"body":{"index.html":{}}}],["firstname",{"_index":324,"title":{},"body":{"classes/EditUserDto.html":{}}}],["fitness",{"_index":786,"title":{},"body":{"license.html":{}}}],["fixme",{"_index":287,"title":{},"body":{"injectables/AuthService.html":{},"injectables/PrismaService.html":{}}}],["followed",{"_index":669,"title":{},"body":{"index.html":{}}}],["following",{"_index":771,"title":{},"body":{"license.html":{}}}],["forbiddenexception",{"_index":274,"title":{},"body":{"injectables/AuthService.html":{}}}],["forbiddenexception('credentials",{"_index":300,"title":{},"body":{"injectables/AuthService.html":{}}}],["forbiddenexception('incorrect",{"_index":303,"title":{},"body":{"injectables/AuthService.html":{}}}],["forbiddenexception('invalid",{"_index":308,"title":{},"body":{"injectables/AuthService.html":{}}}],["found",{"_index":616,"title":{},"body":{"index.html":{}}}],["free",{"_index":748,"title":{},"body":{"license.html":{}}}],["function",{"_index":229,"title":{},"body":{"controllers/AuthController.html":{},"coverage.html":{}}}],["functional",{"_index":653,"title":{},"body":{"index.html":{}}}],["functions",{"_index":607,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["furnished",{"_index":769,"title":{},"body":{"license.html":{}}}],["g",{"_index":721,"title":{},"body":{"index.html":{}}}],["generate",{"_index":710,"title":{},"body":{"index.html":{}}}],["generated",{"_index":713,"title":{},"body":{"index.html":{}}}],["get(':id",{"_index":444,"title":{},"body":{"controllers/ScheduleController.html":{}}}],["get('health",{"_index":43,"title":{},"body":{"controllers/AppController.html":{}}}],["get('me",{"_index":517,"title":{},"body":{"controllers/UserController.html":{}}}],["get()@cachekey('home')@cachettl(number.max_safe_integer",{"_index":17,"title":{},"body":{"controllers/AppController.html":{}}}],["gethealth",{"_index":9,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/ServiceStatus.html":{}}}],["gethello",{"_index":10,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/ServiceStatus.html":{}}}],["getme",{"_index":499,"title":{},"body":{"controllers/UserController.html":{}}}],["getme(@getuser",{"_index":518,"title":{},"body":{"controllers/UserController.html":{}}}],["getme(user",{"_index":506,"title":{},"body":{"controllers/UserController.html":{}}}],["getting",{"_index":609,"title":{"index.html":{},"license.html":{}},"body":{}}],["getuser",{"_index":511,"title":{},"body":{"controllers/UserController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["global",{"_index":386,"title":{},"body":{"modules/PrismaModule.html":{}}}],["granted",{"_index":747,"title":{},"body":{"license.html":{}}}],["graphql",{"_index":585,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["graphql:schema",{"_index":649,"title":{},"body":{"index.html":{}}}],["handled",{"_index":672,"title":{},"body":{"index.html":{}}}],["hash",{"_index":280,"title":{},"body":{"injectables/AuthService.html":{}}}],["hashing",{"_index":700,"title":{},"body":{"index.html":{}}}],["heavily",{"_index":707,"title":{},"body":{"index.html":{}}}],["here",{"_index":202,"title":{},"body":{"controllers/AuthController.html":{},"index.html":{}}}],["hereby",{"_index":746,"title":{},"body":{"license.html":{}}}],["holders",{"_index":792,"title":{},"body":{"license.html":{}}}],["homepage",{"_index":814,"title":{},"body":{"properties.html":{}}}],["hour",{"_index":212,"title":{},"body":{"controllers/AuthController.html":{}}}],["hours",{"_index":625,"title":{},"body":{"index.html":{}}}],["http",{"_index":676,"title":{},"body":{"index.html":{}}}],["http(s",{"_index":216,"title":{},"body":{"controllers/AuthController.html":{}}}],["httpcode",{"_index":179,"title":{},"body":{"controllers/AuthController.html":{}}}],["httpcode(httpstatus.ok",{"_index":191,"title":{},"body":{"controllers/AuthController.html":{}}}],["httpcode(httpstatus.ok)@post('signin",{"_index":172,"title":{},"body":{"controllers/AuthController.html":{}}}],["httponly",{"_index":213,"title":{},"body":{"controllers/AuthController.html":{}}}],["https",{"_index":221,"title":{},"body":{"controllers/AuthController.html":{}}}],["https://docs.nestjs.com/fundamentals/lifecycle",{"_index":405,"title":{},"body":{"injectables/PrismaService.html":{}}}],["https://github.com/jsfame/api.scheduler.nas",{"_index":815,"title":{},"body":{"properties.html":{}}}],["https://github.com/jsfame/api.scheduler.nas/issues",{"_index":817,"title":{},"body":{"properties.html":{}}}],["https://web3mustketeers.github.io/api.taskmon.ai",{"_index":717,"title":{},"body":{"index.html":{}}}],["https://www.prisma.io/docs/concepts/database",{"_index":420,"title":{},"body":{"injectables/PrismaService.html":{}}}],["httpstatus",{"_index":180,"title":{},"body":{"controllers/AuthController.html":{}}}],["id",{"_index":290,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"controllers/ScheduleController.html":{},"injectables/ScheduleService.html":{},"injectables/UserService.html":{}}}],["identifier",{"_index":544,"title":{},"body":{"coverage.html":{}}}],["ignoreexpiration",{"_index":365,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["implemented",{"_index":679,"title":{},"body":{"index.html":{}}}],["implements",{"_index":400,"title":{},"body":{"injectables/PrismaService.html":{}}}],["implied",{"_index":782,"title":{},"body":{"license.html":{}}}],["import",{"_index":19,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthDto.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/EditUserDto.html":{},"classes/JwtGuard.html":{},"injectables/JwtStrategy.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"controllers/ScheduleController.html":{},"modules/ScheduleModule.html":{},"injectables/ScheduleService.html":{},"classes/ServiceStatus.html":{},"classes/UpdateScheduleDto.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["imports",{"_index":67,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UserModule.html":{}}}],["in_progress",{"_index":665,"title":{},"body":{"index.html":{}}}],["included",{"_index":776,"title":{},"body":{"license.html":{}}}],["including",{"_index":756,"title":{},"body":{"license.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthDto.html":{},"injectables/AuthService.html":{},"classes/EditUserDto.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"controllers/ScheduleController.html":{},"injectables/ScheduleService.html":{},"classes/ServiceStatus.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["inestapplication",{"_index":396,"title":{},"body":{"injectables/PrismaService.html":{}}}],["info",{"_index":3,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthDto.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateScheduleDto.html":{},"classes/EditUserDto.html":{},"classes/JwtGuard.html":{},"injectables/JwtStrategy.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/Schedule.html":{},"controllers/ScheduleController.html":{},"modules/ScheduleModule.html":{},"injectables/ScheduleService.html":{},"classes/ServiceStatus.html":{},"classes/UpdateScheduleDto.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["injectable",{"_index":112,"title":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"injectables/ScheduleService.html":{},"injectables/UserService.html":{}},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"injectables/ScheduleService.html":{},"classes/ServiceStatus.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["injectables",{"_index":113,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"injectables/ScheduleService.html":{},"injectables/UserService.html":{},"overview.html":{}}}],["inspiration",{"_index":612,"title":{},"body":{"index.html":{}}}],["inspired",{"_index":708,"title":{},"body":{"index.html":{}}}],["install",{"_index":720,"title":{},"body":{"index.html":{}}}],["installation",{"_index":718,"title":{},"body":{"index.html":{}}}],["installrunning",{"_index":723,"title":{},"body":{"index.html":{}}}],["instanceof",{"_index":297,"title":{},"body":{"injectables/AuthService.html":{}}}],["interactions",{"_index":681,"title":{},"body":{"index.html":{}}}],["isemail",{"_index":249,"title":{},"body":{"classes/AuthDto.html":{},"classes/EditUserDto.html":{}}}],["isemail()@isnotempty",{"_index":245,"title":{},"body":{"classes/AuthDto.html":{}}}],["isemail()@isoptional",{"_index":326,"title":{},"body":{"classes/EditUserDto.html":{}}}],["isglobal",{"_index":96,"title":{},"body":{"modules/AppModule.html":{}}}],["isnotempty",{"_index":250,"title":{},"body":{"classes/AuthDto.html":{}}}],["iso",{"_index":587,"title":{},"body":{"dependencies.html":{}}}],["isoptional",{"_index":331,"title":{},"body":{"classes/EditUserDto.html":{}}}],["isstring",{"_index":332,"title":{},"body":{"classes/EditUserDto.html":{}}}],["isstring()@isoptional",{"_index":328,"title":{},"body":{"classes/EditUserDto.html":{}}}],["isstrongpassword",{"_index":251,"title":{},"body":{"classes/AuthDto.html":{}}}],["isstrongpassword()@isnotempty",{"_index":247,"title":{},"body":{"classes/AuthDto.html":{}}}],["jest",{"_index":704,"title":{},"body":{"index.html":{}}}],["joi",{"_index":73,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["joi.number().default(1606",{"_index":104,"title":{},"body":{"modules/AppModule.html":{}}}],["joi.number().default(2",{"_index":109,"title":{},"body":{"modules/AppModule.html":{}}}],["joi.object",{"_index":100,"title":{},"body":{"modules/AppModule.html":{}}}],["joi.string",{"_index":106,"title":{},"body":{"modules/AppModule.html":{}}}],["joi.string().valid('dev",{"_index":101,"title":{},"body":{"modules/AppModule.html":{}}}],["jwt",{"_index":265,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"dependencies.html":{},"index.html":{}}}],["jwt_max_age",{"_index":108,"title":{},"body":{"modules/AppModule.html":{}}}],["jwt_secret",{"_index":107,"title":{},"body":{"modules/AppModule.html":{}}}],["jwtconstants",{"_index":342,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["jwtfromrequest",{"_index":362,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["jwtguard",{"_index":333,"title":{"classes/JwtGuard.html":{}},"body":{"classes/JwtGuard.html":{},"controllers/UserController.html":{},"coverage.html":{}}}],["jwtmodule",{"_index":259,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtmodule.register",{"_index":262,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtservice",{"_index":266,"title":{},"body":{"injectables/AuthService.html":{}}}],["jwtstrategy",{"_index":256,"title":{"injectables/JwtStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["kind",{"_index":781,"title":{},"body":{"license.html":{}}}],["laciferin@gmail.com",{"_index":819,"title":{},"body":{"properties.html":{}}}],["lastname",{"_index":325,"title":{},"body":{"classes/EditUserDto.html":{}}}],["layers",{"_index":691,"title":{},"body":{"index.html":{}}}],["legend",{"_index":51,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PrismaModule.html":{},"modules/ScheduleModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["liability",{"_index":796,"title":{},"body":{"license.html":{}}}],["liable",{"_index":793,"title":{},"body":{"license.html":{}}}],["license",{"_index":740,"title":{"license.html":{}},"body":{"license.html":{},"properties.html":{}}}],["licensed",{"_index":739,"title":{},"body":{"index.html":{}}}],["life",{"_index":638,"title":{},"body":{"index.html":{}}}],["limitation",{"_index":757,"title":{},"body":{"license.html":{}}}],["limited",{"_index":783,"title":{},"body":{"license.html":{}}}],["literal",{"_index":354,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["logged",{"_index":662,"title":{},"body":{"index.html":{}}}],["logic",{"_index":429,"title":{},"body":{"injectables/PrismaService.html":{},"index.html":{}}}],["long",{"_index":624,"title":{},"body":{"index.html":{}}}],["major",{"_index":659,"title":{},"body":{"index.html":{}}}],["make",{"_index":636,"title":{},"body":{"index.html":{}}}],["manage",{"_index":658,"title":{},"body":{"index.html":{}}}],["management",{"_index":652,"title":{},"body":{"index.html":{}}}],["manager",{"_index":28,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"dependencies.html":{}}}],["matching",{"_index":46,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthDto.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateScheduleDto.html":{},"classes/EditUserDto.html":{},"classes/JwtGuard.html":{},"injectables/JwtStrategy.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/Schedule.html":{},"controllers/ScheduleController.html":{},"modules/ScheduleModule.html":{},"injectables/ScheduleService.html":{},"classes/ServiceStatus.html":{},"classes/UpdateScheduleDto.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["maxage",{"_index":208,"title":{},"body":{"controllers/AuthController.html":{}}}],["merchantability",{"_index":785,"title":{},"body":{"license.html":{}}}],["merge",{"_index":760,"title":{},"body":{"license.html":{}}}],["message",{"_index":128,"title":{},"body":{"injectables/AppService.html":{},"classes/ServiceStatus.html":{},"controllers/UserController.html":{}}}],["metadata",{"_index":599,"title":{},"body":{"dependencies.html":{}}}],["methodologies",{"_index":668,"title":{},"body":{"index.html":{}}}],["methods",{"_index":8,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"controllers/ScheduleController.html":{},"injectables/ScheduleService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["middle",{"_index":225,"title":{},"body":{"controllers/AuthController.html":{}}}],["milliseconds",{"_index":211,"title":{},"body":{"controllers/AuthController.html":{}}}],["miscellaneous",{"_index":606,"title":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":738,"title":{},"body":{"index.html":{},"license.html":{},"properties.html":{}}}],["mode",{"_index":77,"title":{},"body":{"modules/AppModule.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["modify",{"_index":759,"title":{},"body":{"license.html":{}}}],["modular",{"_index":670,"title":{},"body":{"index.html":{}}}],["module",{"_index":47,"title":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PrismaModule.html":{},"modules/ScheduleModule.html":{},"modules/UserModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PrismaModule.html":{},"modules/ScheduleModule.html":{},"modules/UserModule.html":{},"index.html":{},"overview.html":{}}}],["modules",{"_index":49,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PrismaModule.html":{},"modules/ScheduleModule.html":{},"modules/UserModule.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["morph",{"_index":604,"title":{},"body":{"dependencies.html":{}}}],["myself",{"_index":619,"title":{},"body":{"index.html":{}}}],["name",{"_index":121,"title":{},"body":{"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"controllers/ScheduleController.html":{},"injectables/ScheduleService.html":{},"classes/ServiceStatus.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["nasfame",{"_index":744,"title":{},"body":{"license.html":{}}}],["needs",{"_index":520,"title":{},"body":{"controllers/UserController.html":{}}}],["nest/swagger",{"_index":677,"title":{},"body":{"index.html":{}}}],["nestjs",{"_index":596,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["nestjs/apollo",{"_index":561,"title":{},"body":{"dependencies.html":{}}}],["nestjs/cache",{"_index":27,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"dependencies.html":{}}}],["nestjs/common",{"_index":21,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"controllers/ScheduleController.html":{},"modules/ScheduleModule.html":{},"injectables/ScheduleService.html":{},"classes/ServiceStatus.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["nestjs/config",{"_index":70,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":566,"title":{},"body":{"dependencies.html":{}}}],["nestjs/graphql",{"_index":567,"title":{},"body":{"dependencies.html":{}}}],["nestjs/jwt",{"_index":260,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"dependencies.html":{}}}],["nestjs/mapped",{"_index":491,"title":{},"body":{"classes/UpdateScheduleDto.html":{},"dependencies.html":{}}}],["nestjs/passport",{"_index":337,"title":{},"body":{"classes/JwtGuard.html":{},"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":572,"title":{},"body":{"dependencies.html":{}}}],["new",{"_index":144,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/ScheduleService.html":{},"classes/ServiceStatus.html":{},"coverage.html":{},"index.html":{}}}],["noninfringement",{"_index":789,"title":{},"body":{"license.html":{}}}],["notice",{"_index":774,"title":{},"body":{"license.html":{}}}],["npm",{"_index":719,"title":{},"body":{"index.html":{}}}],["null",{"_index":352,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["number",{"_index":270,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/ScheduleService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["object(dto",{"_index":687,"title":{},"body":{"index.html":{}}}],["obtaining",{"_index":751,"title":{},"body":{"license.html":{}}}],["office",{"_index":623,"title":{},"body":{"index.html":{}}}],["ok",{"_index":133,"title":{},"body":{"injectables/AppService.html":{},"classes/ServiceStatus.html":{}}}],["onmoduledestroy",{"_index":404,"title":{},"body":{"injectables/PrismaService.html":{}}}],["onmoduleinit",{"_index":392,"title":{},"body":{"injectables/PrismaService.html":{}}}],["open",{"_index":664,"title":{},"body":{"index.html":{}}}],["optional",{"_index":123,"title":{},"body":{"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/EditUserDto.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"controllers/ScheduleController.html":{},"injectables/ScheduleService.html":{},"classes/ServiceStatus.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["options",{"_index":201,"title":{},"body":{"controllers/AuthController.html":{}}}],["otherwise",{"_index":800,"title":{},"body":{"license.html":{}}}],["out",{"_index":65,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PrismaModule.html":{},"modules/ScheduleModule.html":{},"modules/UserModule.html":{},"license.html":{},"overview.html":{}}}],["outside",{"_index":621,"title":{},"body":{"index.html":{}}}],["over",{"_index":220,"title":{},"body":{"controllers/AuthController.html":{}}}],["overview",{"_index":807,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["ownership",{"_index":697,"title":{},"body":{"index.html":{}}}],["p2002",{"_index":298,"title":{},"body":{"injectables/AuthService.html":{}}}],["package",{"_index":558,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["param",{"_index":454,"title":{},"body":{"controllers/ScheduleController.html":{}}}],["parameters",{"_index":120,"title":{},"body":{"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"controllers/ScheduleController.html":{},"injectables/ScheduleService.html":{},"classes/ServiceStatus.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["parser",{"_index":583,"title":{},"body":{"dependencies.html":{}}}],["partialtype",{"_index":490,"title":{},"body":{"classes/UpdateScheduleDto.html":{}}}],["partialtype(createscheduledto",{"_index":493,"title":{},"body":{"classes/UpdateScheduleDto.html":{}}}],["particular",{"_index":787,"title":{},"body":{"license.html":{}}}],["passport",{"_index":358,"title":{},"body":{"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["passport.js",{"_index":648,"title":{},"body":{"index.html":{}}}],["passportjs",{"_index":698,"title":{},"body":{"index.html":{}}}],["passportstrategy",{"_index":356,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["passportstrategy(strategy",{"_index":360,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["password",{"_index":244,"title":{},"body":{"classes/AuthDto.html":{},"index.html":{}}}],["patch",{"_index":455,"title":{},"body":{"controllers/ScheduleController.html":{},"controllers/UserController.html":{}}}],["patch(':id",{"_index":451,"title":{},"body":{"controllers/ScheduleController.html":{}}}],["path",{"_index":206,"title":{},"body":{"controllers/AuthController.html":{}}}],["pattern",{"_index":688,"title":{},"body":{"index.html":{}}}],["payload",{"_index":311,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["payload.email",{"_index":371,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["payload.sub",{"_index":368,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["permission",{"_index":745,"title":{},"body":{"license.html":{}}}],["permit",{"_index":767,"title":{},"body":{"license.html":{}}}],["person",{"_index":750,"title":{},"body":{"license.html":{}}}],["persons",{"_index":768,"title":{},"body":{"license.html":{}}}],["pipes",{"_index":685,"title":{},"body":{"index.html":{}}}],["pnpm",{"_index":722,"title":{},"body":{"index.html":{}}}],["port",{"_index":103,"title":{},"body":{"modules/AppModule.html":{}}}],["portions",{"_index":778,"title":{},"body":{"license.html":{}}}],["post",{"_index":181,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ScheduleController.html":{}}}],["post('signin",{"_index":192,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('signup",{"_index":176,"title":{},"body":{"controllers/AuthController.html":{}}}],["postgresql",{"_index":646,"title":{},"body":{"index.html":{}}}],["potential",{"_index":633,"title":{},"body":{"index.html":{}}}],["prefix",{"_index":164,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ScheduleController.html":{},"controllers/UserController.html":{}}}],["prerequisite",{"_index":724,"title":{},"body":{"index.html":{}}}],["prisma",{"_index":124,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"classes/ServiceStatus.html":{},"injectables/UserService.html":{},"dependencies.html":{},"index.html":{}}}],["prisma.service",{"_index":387,"title":{},"body":{"modules/PrismaModule.html":{}}}],["prisma/client",{"_index":399,"title":{},"body":{"injectables/PrismaService.html":{},"controllers/UserController.html":{},"dependencies.html":{}}}],["prisma/client/runtime",{"_index":277,"title":{},"body":{"injectables/AuthService.html":{}}}],["prisma/prisma.module",{"_index":72,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UserModule.html":{}}}],["prisma/prisma.service",{"_index":130,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"classes/ServiceStatus.html":{},"injectables/UserService.html":{}}}],["prismaclient",{"_index":389,"title":{},"body":{"injectables/PrismaService.html":{}}}],["prismaclientknownrequesterror",{"_index":275,"title":{},"body":{"injectables/AuthService.html":{}}}],["prismaclientunknownrequesterror",{"_index":276,"title":{},"body":{"injectables/AuthService.html":{}}}],["prismamodule",{"_index":60,"title":{"modules/PrismaModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PrismaModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["prismaservice",{"_index":118,"title":{"injectables/PrismaService.html":{}},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/ServiceStatus.html":{},"injectables/UserService.html":{},"coverage.html":{},"overview.html":{}}}],["private",{"_index":187,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["process.env.mode",{"_index":78,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["process.env.node_env",{"_index":85,"title":{},"body":{"modules/AppModule.html":{}}}],["prod",{"_index":88,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["production",{"_index":89,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["project",{"_index":711,"title":{},"body":{"index.html":{}}}],["properties",{"_index":242,"title":{"properties.html":{}},"body":{"classes/AuthDto.html":{},"classes/EditUserDto.html":{},"injectables/JwtStrategy.html":{},"classes/ServiceStatus.html":{},"properties.html":{}}}],["provided",{"_index":779,"title":{},"body":{"license.html":{}}}],["providers",{"_index":54,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PrismaModule.html":{},"modules/ScheduleModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["public",{"_index":135,"title":{},"body":{"injectables/AppService.html":{},"classes/ServiceStatus.html":{}}}],["publish",{"_index":761,"title":{},"body":{"license.html":{}}}],["purpose",{"_index":788,"title":{},"body":{"license.html":{}}}],["pwmatches",{"_index":305,"title":{},"body":{"injectables/AuthService.html":{}}}],["readonly",{"_index":33,"title":{},"body":{"controllers/AppController.html":{},"controllers/ScheduleController.html":{}}}],["reflect",{"_index":598,"title":{},"body":{"dependencies.html":{}}}],["register",{"_index":656,"title":{},"body":{"index.html":{}}}],["remove",{"_index":438,"title":{},"body":{"controllers/ScheduleController.html":{},"injectables/ScheduleService.html":{}}}],["remove(@param('id",{"_index":469,"title":{},"body":{"controllers/ScheduleController.html":{}}}],["remove(id",{"_index":446,"title":{},"body":{"controllers/ScheduleController.html":{},"injectables/ScheduleService.html":{}}}],["removes",{"_index":484,"title":{},"body":{"injectables/ScheduleService.html":{}}}],["replace",{"_index":232,"title":{},"body":{"controllers/AuthController.html":{}}}],["repo",{"_index":737,"title":{},"body":{"index.html":{}}}],["repository",{"_index":682,"title":{},"body":{"index.html":{},"properties.html":{}}}],["req",{"_index":351,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["req.cookies",{"_index":224,"title":{},"body":{"controllers/AuthController.html":{},"injectables/JwtStrategy.html":{}}}],["req.cookies.token",{"_index":381,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["req.cookies[tokenfield].length",{"_index":378,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["req.user",{"_index":375,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["request",{"_index":359,"title":{},"body":{"injectables/JwtStrategy.html":{},"controllers/UserController.html":{},"miscellaneous/variables.html":{}}}],["request.user",{"_index":828,"title":{},"body":{"miscellaneous/variables.html":{}}}],["request.user[data",{"_index":827,"title":{},"body":{"miscellaneous/variables.html":{}}}],["requests",{"_index":217,"title":{},"body":{"controllers/AuthController.html":{},"index.html":{}}}],["requesttype",{"_index":349,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["res",{"_index":170,"title":{},"body":{"controllers/AuthController.html":{}}}],["res.clearcookie('token",{"_index":235,"title":{},"body":{"controllers/AuthController.html":{}}}],["res.clearcookie(cookiename",{"_index":231,"title":{},"body":{"controllers/AuthController.html":{}}}],["res.cookie('token",{"_index":236,"title":{},"body":{"controllers/AuthController.html":{}}}],["res.cookie('user",{"_index":196,"title":{},"body":{"controllers/AuthController.html":{}}}],["res.send(token",{"_index":239,"title":{},"body":{"controllers/AuthController.html":{}}}],["reset",{"_index":64,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PrismaModule.html":{},"modules/ScheduleModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["response",{"_index":171,"title":{},"body":{"controllers/AuthController.html":{}}}],["restful",{"_index":641,"title":{},"body":{"index.html":{}}}],["restriction",{"_index":755,"title":{},"body":{"license.html":{}}}],["results",{"_index":45,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthDto.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateScheduleDto.html":{},"classes/EditUserDto.html":{},"classes/JwtGuard.html":{},"injectables/JwtStrategy.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/Schedule.html":{},"controllers/ScheduleController.html":{},"modules/ScheduleModule.html":{},"injectables/ScheduleService.html":{},"classes/ServiceStatus.html":{},"classes/UpdateScheduleDto.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":39,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"controllers/ScheduleController.html":{},"injectables/ScheduleService.html":{},"classes/ServiceStatus.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["returned",{"_index":373,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["returns",{"_index":16,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"controllers/ScheduleController.html":{},"injectables/ScheduleService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["rights",{"_index":758,"title":{},"body":{"license.html":{}}}],["run",{"_index":730,"title":{},"body":{"index.html":{}}}],["running",{"_index":141,"title":{},"body":{"injectables/AppService.html":{},"classes/ServiceStatus.html":{},"index.html":{}}}],["rxjs",{"_index":601,"title":{},"body":{"dependencies.html":{}}}],["salts",{"_index":701,"title":{},"body":{"index.html":{}}}],["saw",{"_index":632,"title":{},"body":{"index.html":{}}}],["schedule",{"_index":431,"title":{"classes/Schedule.html":{}},"body":{"classes/Schedule.html":{},"controllers/ScheduleController.html":{},"injectables/ScheduleService.html":{},"coverage.html":{}}}],["schedule.controller",{"_index":474,"title":{},"body":{"modules/ScheduleModule.html":{}}}],["schedule.dto",{"_index":459,"title":{},"body":{"controllers/ScheduleController.html":{},"injectables/ScheduleService.html":{},"classes/UpdateScheduleDto.html":{}}}],["schedule.dto.ts",{"_index":320,"title":{},"body":{"classes/CreateScheduleDto.html":{},"classes/UpdateScheduleDto.html":{},"coverage.html":{}}}],["schedule.service",{"_index":457,"title":{},"body":{"controllers/ScheduleController.html":{},"modules/ScheduleModule.html":{}}}],["schedule/schedule.module",{"_index":76,"title":{},"body":{"modules/AppModule.html":{}}}],["schedulecontroller",{"_index":433,"title":{"controllers/ScheduleController.html":{}},"body":{"controllers/ScheduleController.html":{},"modules/ScheduleModule.html":{},"coverage.html":{}}}],["schedulemodule",{"_index":61,"title":{"modules/ScheduleModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ScheduleModule.html":{},"modules.html":{},"overview.html":{}}}],["scheduler",{"_index":635,"title":{},"body":{"index.html":{}}}],["scheduleservice",{"_index":456,"title":{"injectables/ScheduleService.html":{}},"body":{"controllers/ScheduleController.html":{},"modules/ScheduleModule.html":{},"injectables/ScheduleService.html":{},"coverage.html":{},"overview.html":{}}}],["science",{"_index":629,"title":{},"body":{"index.html":{}}}],["sec",{"_index":38,"title":{},"body":{"controllers/AppController.html":{}}}],["secret",{"_index":313,"title":{},"body":{"injectables/AuthService.html":{}}}],["secretorkey",{"_index":366,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["secure",{"_index":218,"title":{},"body":{"controllers/AuthController.html":{}}}],["select",{"_index":286,"title":{},"body":{"injectables/AuthService.html":{}}}],["sell",{"_index":765,"title":{},"body":{"license.html":{}}}],["sent",{"_index":219,"title":{},"body":{"controllers/AuthController.html":{}}}],["separate",{"_index":673,"title":{},"body":{"index.html":{}}}],["separating",{"_index":674,"title":{},"body":{"index.html":{}}}],["server",{"_index":642,"title":{},"body":{"index.html":{},"properties.html":{}}}],["service",{"_index":521,"title":{},"body":{"controllers/UserController.html":{}}}],["services",{"_index":680,"title":{},"body":{"index.html":{}}}],["servicestatus",{"_index":131,"title":{"classes/ServiceStatus.html":{}},"body":{"injectables/AppService.html":{},"classes/ServiceStatus.html":{},"coverage.html":{}}}],["set",{"_index":199,"title":{},"body":{"controllers/AuthController.html":{}}}],["shall",{"_index":775,"title":{},"body":{"license.html":{}}}],["signed",{"_index":222,"title":{},"body":{"controllers/AuthController.html":{}}}],["signin",{"_index":166,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"index.html":{}}}],["signin(@body",{"_index":193,"title":{},"body":{"controllers/AuthController.html":{}}}],["signin(dto",{"_index":168,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["signtoken",{"_index":264,"title":{},"body":{"injectables/AuthService.html":{}}}],["signtoken(userid",{"_index":269,"title":{},"body":{"injectables/AuthService.html":{}}}],["signup",{"_index":167,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"index.html":{}}}],["signup(@body",{"_index":189,"title":{},"body":{"controllers/AuthController.html":{}}}],["signup(dto",{"_index":175,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["software",{"_index":634,"title":{},"body":{"index.html":{},"license.html":{}}}],["solana/web3.js",{"_index":574,"title":{},"body":{"dependencies.html":{}}}],["something",{"_index":522,"title":{},"body":{"controllers/UserController.html":{}}}],["source",{"_index":4,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthDto.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateScheduleDto.html":{},"classes/EditUserDto.html":{},"classes/JwtGuard.html":{},"injectables/JwtStrategy.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/Schedule.html":{},"controllers/ScheduleController.html":{},"modules/ScheduleModule.html":{},"injectables/ScheduleService.html":{},"classes/ServiceStatus.html":{},"classes/UpdateScheduleDto.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["specs",{"_index":654,"title":{},"body":{"index.html":{}}}],["src/.../app.module.ts",{"_index":821,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../get",{"_index":822,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":608,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/app.controller.ts",{"_index":6,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.controller.ts:13",{"_index":18,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.controller.ts:19",{"_index":15,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.module.ts",{"_index":66,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app.service.ts",{"_index":114,"title":{},"body":{"injectables/AppService.html":{},"classes/ServiceStatus.html":{},"coverage.html":{}}}],["src/app.service.ts:11",{"_index":127,"title":{},"body":{"injectables/AppService.html":{}}}],["src/app.service.ts:15",{"_index":125,"title":{},"body":{"injectables/AppService.html":{}}}],["src/app.service.ts:4",{"_index":486,"title":{},"body":{"classes/ServiceStatus.html":{}}}],["src/app.service.ts:5",{"_index":488,"title":{},"body":{"classes/ServiceStatus.html":{}}}],["src/app.service.ts:9",{"_index":119,"title":{},"body":{"injectables/AppService.html":{}}}],["src/auth/auth.controller.ts",{"_index":163,"title":{},"body":{"controllers/AuthController.html":{},"coverage.html":{}}}],["src/auth/auth.controller.ts:12",{"_index":177,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:18",{"_index":173,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.module.ts",{"_index":257,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/auth/auth.service.ts",{"_index":263,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/auth/auth.service.ts:10",{"_index":267,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:13",{"_index":273,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:45",{"_index":268,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:61",{"_index":271,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/decorator/get",{"_index":551,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/auth/dto/auth.dto.ts",{"_index":241,"title":{},"body":{"classes/AuthDto.html":{},"coverage.html":{}}}],["src/auth/dto/auth.dto.ts:10",{"_index":248,"title":{},"body":{"classes/AuthDto.html":{}}}],["src/auth/dto/auth.dto.ts:6",{"_index":246,"title":{},"body":{"classes/AuthDto.html":{}}}],["src/auth/guard/jwt.guard.ts",{"_index":334,"title":{},"body":{"classes/JwtGuard.html":{},"coverage.html":{}}}],["src/auth/guard/jwt.guard.ts:3",{"_index":335,"title":{},"body":{"classes/JwtGuard.html":{}}}],["src/auth/strategy/jwt.strategy.ts",{"_index":341,"title":{},"body":{"injectables/JwtStrategy.html":{},"coverage.html":{}}}],["src/auth/strategy/jwt.strategy.ts:10",{"_index":347,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/auth/strategy/jwt.strategy.ts:21",{"_index":355,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/auth/strategy/jwt.strategy.ts:32",{"_index":350,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/main.ts",{"_index":554,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/prisma/prisma.module.ts",{"_index":385,"title":{},"body":{"modules/PrismaModule.html":{}}}],["src/prisma/prisma.service.ts",{"_index":388,"title":{},"body":{"injectables/PrismaService.html":{},"coverage.html":{}}}],["src/prisma/prisma.service.ts:10",{"_index":398,"title":{},"body":{"injectables/PrismaService.html":{}}}],["src/prisma/prisma.service.ts:21",{"_index":397,"title":{},"body":{"injectables/PrismaService.html":{}}}],["src/prisma/prisma.service.ts:25",{"_index":393,"title":{},"body":{"injectables/PrismaService.html":{}}}],["src/prisma/prisma.service.ts:38",{"_index":394,"title":{},"body":{"injectables/PrismaService.html":{}}}],["src/schedule/dto/create",{"_index":319,"title":{},"body":{"classes/CreateScheduleDto.html":{},"coverage.html":{}}}],["src/schedule/dto/update",{"_index":489,"title":{},"body":{"classes/UpdateScheduleDto.html":{},"coverage.html":{}}}],["src/schedule/entities/schedule.entity.ts",{"_index":432,"title":{},"body":{"classes/Schedule.html":{},"coverage.html":{}}}],["src/schedule/schedule.controller.ts",{"_index":434,"title":{},"body":{"controllers/ScheduleController.html":{},"coverage.html":{}}}],["src/schedule/schedule.controller.ts:11",{"_index":441,"title":{},"body":{"controllers/ScheduleController.html":{}}}],["src/schedule/schedule.controller.ts:16",{"_index":442,"title":{},"body":{"controllers/ScheduleController.html":{}}}],["src/schedule/schedule.controller.ts:21",{"_index":445,"title":{},"body":{"controllers/ScheduleController.html":{}}}],["src/schedule/schedule.controller.ts:26",{"_index":452,"title":{},"body":{"controllers/ScheduleController.html":{}}}],["src/schedule/schedule.controller.ts:31",{"_index":448,"title":{},"body":{"controllers/ScheduleController.html":{}}}],["src/schedule/schedule.module.ts",{"_index":473,"title":{},"body":{"modules/ScheduleModule.html":{}}}],["src/schedule/schedule.service.ts",{"_index":475,"title":{},"body":{"injectables/ScheduleService.html":{},"coverage.html":{}}}],["src/schedule/schedule.service.ts:11",{"_index":477,"title":{},"body":{"injectables/ScheduleService.html":{}}}],["src/schedule/schedule.service.ts:15",{"_index":478,"title":{},"body":{"injectables/ScheduleService.html":{}}}],["src/schedule/schedule.service.ts:19",{"_index":480,"title":{},"body":{"injectables/ScheduleService.html":{}}}],["src/schedule/schedule.service.ts:23",{"_index":479,"title":{},"body":{"injectables/ScheduleService.html":{}}}],["src/schedule/schedule.service.ts:7",{"_index":476,"title":{},"body":{"injectables/ScheduleService.html":{}}}],["src/user/dto/edit",{"_index":322,"title":{},"body":{"classes/EditUserDto.html":{},"coverage.html":{}}}],["src/user/user.controller.ts",{"_index":495,"title":{},"body":{"controllers/UserController.html":{},"coverage.html":{}}}],["src/user/user.controller.ts:14",{"_index":508,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/user.controller.ts:20",{"_index":505,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/user.controller.ts:28",{"_index":502,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/user.module.ts",{"_index":532,"title":{},"body":{"modules/UserModule.html":{}}}],["src/user/user.service.ts",{"_index":534,"title":{},"body":{"injectables/UserService.html":{},"coverage.html":{}}}],["src/user/user.service.ts:24",{"_index":536,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:6",{"_index":535,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:9",{"_index":537,"title":{},"body":{"injectables/UserService.html":{}}}],["ssl",{"_index":422,"title":{},"body":{"injectables/PrismaService.html":{}}}],["sslcert",{"_index":418,"title":{},"body":{"injectables/PrismaService.html":{}}}],["sslcert=root.crt",{"_index":419,"title":{},"body":{"injectables/PrismaService.html":{}}}],["stand",{"_index":620,"title":{},"body":{"index.html":{}}}],["start",{"_index":731,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":733,"title":{},"body":{"index.html":{}}}],["start:prodtest",{"_index":734,"title":{},"body":{"index.html":{}}}],["started",{"_index":610,"title":{"index.html":{},"license.html":{}},"body":{}}],["statements",{"_index":545,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":343,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["status",{"_index":136,"title":{},"body":{"injectables/AppService.html":{},"classes/ServiceStatus.html":{},"index.html":{}}}],["strategy",{"_index":261,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{}}}],["string",{"_index":129,"title":{},"body":{"injectables/AppService.html":{},"classes/AuthDto.html":{},"injectables/AuthService.html":{},"classes/EditUserDto.html":{},"injectables/JwtStrategy.html":{},"controllers/ScheduleController.html":{},"injectables/ScheduleService.html":{},"classes/ServiceStatus.html":{},"miscellaneous/variables.html":{}}}],["structure",{"_index":712,"title":{},"body":{"index.html":{}}}],["student",{"_index":631,"title":{},"body":{"index.html":{}}}],["students",{"_index":618,"title":{},"body":{"index.html":{}}}],["sub",{"_index":312,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["subject",{"_index":770,"title":{},"body":{"license.html":{}}}],["sublicense",{"_index":763,"title":{},"body":{"license.html":{}}}],["subscriptions",{"_index":589,"title":{},"body":{"dependencies.html":{}}}],["substantial",{"_index":777,"title":{},"body":{"license.html":{}}}],["successfully",{"_index":150,"title":{},"body":{"injectables/AppService.html":{},"classes/ServiceStatus.html":{}}}],["super",{"_index":340,"title":{},"body":{"classes/JwtGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{}}}],["supertest",{"_index":705,"title":{},"body":{"index.html":{}}}],["support",{"_index":804,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":805,"title":{},"body":{"modules.html":{}}}],["switch",{"_index":81,"title":{},"body":{"modules/AppModule.html":{}}}],["table",{"_index":557,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":556,"title":{},"body":{"coverage.html":{}}}],["taken",{"_index":301,"title":{},"body":{"injectables/AuthService.html":{}}}],["task",{"_index":651,"title":{},"body":{"index.html":{}}}],["tasks",{"_index":657,"title":{},"body":{"index.html":{}}}],["teachers",{"_index":617,"title":{},"body":{"index.html":{}}}],["tear",{"_index":427,"title":{},"body":{"injectables/PrismaService.html":{}}}],["technical",{"_index":667,"title":{},"body":{"index.html":{}}}],["test",{"_index":83,"title":{},"body":{"modules/AppModule.html":{},"injectables/JwtStrategy.html":{},"index.html":{}}}],["test').default('dev",{"_index":102,"title":{},"body":{"modules/AppModule.html":{}}}],["test:covlicense",{"_index":736,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":735,"title":{},"body":{"index.html":{}}}],["testing",{"_index":86,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["tests",{"_index":703,"title":{},"body":{"index.html":{}}}],["this.$connect",{"_index":411,"title":{},"body":{"injectables/PrismaService.html":{}}}],["this.$disconnect",{"_index":414,"title":{},"body":{"injectables/PrismaService.html":{}}}],["this.$on('beforeexit",{"_index":416,"title":{},"body":{"injectables/PrismaService.html":{}}}],["this.$transaction",{"_index":426,"title":{},"body":{"injectables/PrismaService.html":{}}}],["this.appservice.gethealth",{"_index":44,"title":{},"body":{"controllers/AppController.html":{}}}],["this.appservice.gethello",{"_index":40,"title":{},"body":{"controllers/AppController.html":{}}}],["this.authservice.signin(dto",{"_index":195,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.signup(dto",{"_index":190,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.config.get('jwt_secret",{"_index":238,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["this.jwt.signasync(payload",{"_index":315,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.prisma",{"_index":146,"title":{},"body":{"injectables/AppService.html":{},"classes/ServiceStatus.html":{}}}],["this.prisma.user.create",{"_index":284,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.prisma.user.delete",{"_index":541,"title":{},"body":{"injectables/UserService.html":{}}}],["this.prisma.user.findunique",{"_index":302,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["this.prisma.user.update",{"_index":539,"title":{},"body":{"injectables/UserService.html":{}}}],["this.scheduleservice.create(createscheduledto",{"_index":463,"title":{},"body":{"controllers/ScheduleController.html":{}}}],["this.scheduleservice.findall",{"_index":464,"title":{},"body":{"controllers/ScheduleController.html":{}}}],["this.scheduleservice.findone(+id",{"_index":466,"title":{},"body":{"controllers/ScheduleController.html":{}}}],["this.scheduleservice.remove(+id",{"_index":470,"title":{},"body":{"controllers/ScheduleController.html":{}}}],["this.scheduleservice.update(+id",{"_index":468,"title":{},"body":{"controllers/ScheduleController.html":{}}}],["this.signtoken(user.id",{"_index":309,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.user.deletemany",{"_index":430,"title":{},"body":{"injectables/PrismaService.html":{}}}],["this.userservice.deleteuser(userid",{"_index":528,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.edituser(userid",{"_index":525,"title":{},"body":{"controllers/UserController.html":{}}}],["through",{"_index":215,"title":{},"body":{"controllers/AuthController.html":{}}}],["throw",{"_index":299,"title":{},"body":{"injectables/AuthService.html":{}}}],["throws",{"_index":369,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["time",{"_index":210,"title":{},"body":{"controllers/AuthController.html":{}}}],["todo",{"_index":198,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["token",{"_index":194,"title":{},"body":{"controllers/AuthController.html":{},"injectables/JwtStrategy.html":{}}}],["token.access_token",{"_index":237,"title":{},"body":{"controllers/AuthController.html":{}}}],["tokenfield",{"_index":376,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["tokens",{"_index":699,"title":{},"body":{"index.html":{}}}],["tools",{"_index":591,"title":{},"body":{"dependencies.html":{}}}],["top",{"_index":647,"title":{},"body":{"index.html":{}}}],["tort",{"_index":799,"title":{},"body":{"license.html":{}}}],["transfer",{"_index":686,"title":{},"body":{"index.html":{}}}],["transferring",{"_index":689,"title":{},"body":{"index.html":{}}}],["transformer",{"_index":578,"title":{},"body":{"dependencies.html":{}}}],["transformers",{"_index":289,"title":{},"body":{"injectables/AuthService.html":{}}}],["true",{"_index":97,"title":{},"body":{"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/ServiceStatus.html":{}}}],["try",{"_index":282,"title":{},"body":{"injectables/AuthService.html":{}}}],["ts",{"_index":603,"title":{},"body":{"dependencies.html":{}}}],["type",{"_index":122,"title":{},"body":{"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthDto.html":{},"injectables/AuthService.html":{},"classes/EditUserDto.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"controllers/ScheduleController.html":{},"injectables/ScheduleService.html":{},"classes/ServiceStatus.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["typeorm",{"_index":683,"title":{},"body":{"index.html":{}}}],["types",{"_index":492,"title":{},"body":{"classes/UpdateScheduleDto.html":{},"dependencies.html":{}}}],["typescript",{"_index":645,"title":{},"body":{"index.html":{}}}],["undefined",{"_index":138,"title":{},"body":{"injectables/AppService.html":{},"classes/ServiceStatus.html":{},"miscellaneous/variables.html":{}}}],["unit",{"_index":702,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":126,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["up",{"_index":140,"title":{},"body":{"injectables/AppService.html":{},"classes/ServiceStatus.html":{}}}],["update",{"_index":439,"title":{},"body":{"controllers/ScheduleController.html":{},"injectables/ScheduleService.html":{},"index.html":{}}}],["update(@param('id",{"_index":467,"title":{},"body":{"controllers/ScheduleController.html":{}}}],["update(id",{"_index":449,"title":{},"body":{"controllers/ScheduleController.html":{},"injectables/ScheduleService.html":{}}}],["updatedat",{"_index":292,"title":{},"body":{"injectables/AuthService.html":{}}}],["updates",{"_index":483,"title":{},"body":{"injectables/ScheduleService.html":{}}}],["updatescheduledto",{"_index":450,"title":{"classes/UpdateScheduleDto.html":{}},"body":{"controllers/ScheduleController.html":{},"injectables/ScheduleService.html":{},"classes/UpdateScheduleDto.html":{},"coverage.html":{}}}],["url",{"_index":424,"title":{},"body":{"injectables/PrismaService.html":{}}}],["use",{"_index":288,"title":{},"body":{"injectables/AuthService.html":{},"license.html":{}}}],["useguards",{"_index":509,"title":{},"body":{"controllers/UserController.html":{}}}],["useguards(jwtguard",{"_index":516,"title":{},"body":{"controllers/UserController.html":{}}}],["useguards(jwtguard)@delete",{"_index":501,"title":{},"body":{"controllers/UserController.html":{}}}],["useguards(jwtguard)@get('me",{"_index":507,"title":{},"body":{"controllers/UserController.html":{}}}],["useguards(jwtguard)@patch",{"_index":504,"title":{},"body":{"controllers/UserController.html":{}}}],["useinterceptors",{"_index":20,"title":{},"body":{"controllers/AppController.html":{}}}],["useinterceptors(cacheinterceptor",{"_index":29,"title":{},"body":{"controllers/AppController.html":{}}}],["user",{"_index":283,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"index.html":{}}}],["user.controller",{"_index":533,"title":{},"body":{"modules/UserModule.html":{}}}],["user.decorator.ts",{"_index":552,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["user.dto.ts",{"_index":323,"title":{},"body":{"classes/EditUserDto.html":{},"coverage.html":{}}}],["user.dto.ts:10",{"_index":329,"title":{},"body":{"classes/EditUserDto.html":{}}}],["user.dto.ts:14",{"_index":330,"title":{},"body":{"classes/EditUserDto.html":{}}}],["user.dto.ts:6",{"_index":327,"title":{},"body":{"classes/EditUserDto.html":{}}}],["user.email",{"_index":310,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.hash",{"_index":540,"title":{},"body":{"injectables/UserService.html":{}}}],["user.service",{"_index":514,"title":{},"body":{"controllers/UserController.html":{},"modules/UserModule.html":{}}}],["user/user.module",{"_index":74,"title":{},"body":{"modules/AppModule.html":{}}}],["usercontroller",{"_index":494,"title":{"controllers/UserController.html":{}},"body":{"controllers/UserController.html":{},"modules/UserModule.html":{},"coverage.html":{}}}],["userid",{"_index":272,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["usermodule",{"_index":62,"title":{"modules/UserModule.html":{}},"body":{"modules/AppModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["users",{"_index":496,"title":{},"body":{"controllers/UserController.html":{},"index.html":{}}}],["userservice",{"_index":513,"title":{"injectables/UserService.html":{}},"body":{"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"overview.html":{}}}],["using",{"_index":644,"title":{},"body":{"index.html":{}}}],["utility",{"_index":228,"title":{},"body":{"controllers/AuthController.html":{}}}],["validate",{"_index":345,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["validate(payload",{"_index":353,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["validation",{"_index":684,"title":{},"body":{"index.html":{}}}],["validationschema",{"_index":99,"title":{},"body":{"modules/AppModule.html":{}}}],["validator",{"_index":252,"title":{},"body":{"classes/AuthDto.html":{},"classes/EditUserDto.html":{},"dependencies.html":{}}}],["value",{"_index":487,"title":{},"body":{"classes/ServiceStatus.html":{},"miscellaneous/variables.html":{}}}],["variable",{"_index":547,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":820,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["vars",{"_index":729,"title":{},"body":{"index.html":{}}}],["version",{"_index":812,"title":{},"body":{"properties.html":{}}}],["very",{"_index":626,"title":{},"body":{"index.html":{}}}],["visible",{"_index":661,"title":{},"body":{"index.html":{}}}],["ware",{"_index":226,"title":{},"body":{"controllers/AuthController.html":{}}}],["warranties",{"_index":784,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":780,"title":{},"body":{"license.html":{}}}],["watch",{"_index":732,"title":{},"body":{"index.html":{}}}],["whatever",{"_index":372,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["whether",{"_index":797,"title":{},"body":{"license.html":{}}}],["whitelist:true",{"_index":524,"title":{},"body":{"controllers/UserController.html":{}}}],["without",{"_index":754,"title":{},"body":{"license.html":{}}}],["work",{"_index":402,"title":{},"body":{"injectables/PrismaService.html":{}}}],["years",{"_index":615,"title":{},"body":{"index.html":{}}}],["zoom",{"_index":63,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PrismaModule.html":{},"modules/ScheduleModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                getHealth\n                            \n                            \n                                    \n                                    \n                                    \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        getHealth\n                        \n                    \n                \n            \n            \n                \n                    \n                    getHealth()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @CacheTTL(undefined)@Get('health')\n                \n            \n\n            \n                \n                    Defined in src/app.controller.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        \n                        getHello\n                        \n                    \n                \n            \n            \n                \n                    \n                    getHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@CacheKey('home')@CacheTTL(Number.MAX_SAFE_INTEGER)\n                \n            \n\n            \n                \n                    Defined in src/app.controller.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, UseInterceptors } from '@nestjs/common'\nimport { AppService } from './app.service'\nimport { CacheInterceptor, CacheKey, CacheTTL } from '@nestjs/cache-manager'\n\n@Controller()\n@UseInterceptors(CacheInterceptor)\nexport class AppController {\n  constructor(private readonly appService: AppService) {}\n\n  @Get()\n  @CacheKey('home')\n  @CacheTTL(Number.MAX_SAFE_INTEGER) //default is just 1 sec\n  getHello() {\n    return this.appService.getHello()\n  }\n\n  @CacheTTL(5 * 1000)\n  @Get('health')\n  getHealth() {\n    return this.appService.getHealth()\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nPrismaModule\n\nPrismaModule\n\nAppModule -->\n\nPrismaModule->AppModule\n\n\n\n\n\nScheduleModule\n\nScheduleModule\n\nAppModule -->\n\nScheduleModule->AppModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nAppModule -->\n\nUserModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            PrismaModule\n                        \n                        \n                            ScheduleModule\n                        \n                        \n                            UserModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common'\nimport { AppController } from './app.controller'\nimport { AppService } from './app.service'\nimport { ConfigModule } from '@nestjs/config'\nimport { AuthModule } from './auth/auth.module'\nimport { PrismaModule } from './prisma/prisma.module'\nimport * as Joi from 'joi'\nimport { UserModule } from './user/user.module'\nimport { CacheModule } from '@nestjs/cache-manager'\nimport { ScheduleModule } from './schedule/schedule.module'\n\nlet mode = process.env.MODE\nlet envFile = '.env'\n\nswitch (mode) {\n  case 'test':\n    envFile = '.env.test'\n    process.env.NODE_ENV = 'testing'\n    break\n  case 'prod':\n    process.env.NODE_ENV = 'production'\n    envFile = '.env.prod'\n    break\n  default:\n    mode = 'dev'\n    process.env.NODE_ENV = 'development'\n    envFile = '.env.local'\n}\n\n@Module({\n  imports: [\n    ConfigModule.forRoot({\n      envFilePath: [envFile, '.env'],\n      isGlobal: true,\n      cache: true,\n      validationSchema: Joi.object({\n        MODE: Joi.string().valid('dev', 'prod', 'test').default('dev'),\n        PORT: Joi.number().default(1606),\n        DATABASE_URL: Joi.string(),\n        JWT_SECRET: Joi.string(),\n        JWT_MAX_AGE: Joi.number().default(2 * 60 * 60 * 1000),\n      }),\n    }),\n    CacheModule.register({ isGlobal: true }),\n    PrismaModule,\n    AuthModule,\n    UserModule,\n    ScheduleModule,\n  ],\n  controllers: [AppController],\n  providers: [AppService],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getHealth\n                            \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in src/app.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getHealth\n                        \n                    \n                \n            \n            \n                \n                    \n                    getHealth()\n                \n            \n\n\n            \n                \n                    Defined in src/app.service.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     unknown\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n            \n                \n                    Defined in src/app.service.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     { message: string; }\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common'\nimport { PrismaService } from './prisma/prisma.service'\n\nclass ServiceStatus {\n  constructor(public ok: boolean = true, public status: string = 'OK', public debug: any = undefined) {}\n}\n\n@Injectable()\nexport class AppService {\n  constructor(private prisma: PrismaService) {}\n  getHello() {\n    return { message: 'app is up and running' }\n  }\n\n  async getHealth() {\n    const dbStatus = new ServiceStatus()\n\n    await this.prisma\n      .$connect()\n      .then(() => {\n        console.count('db connected successfully')\n      })\n      .catch((err) => {\n        console.error({ prisma: `connection failed due to ${err}` })\n        dbStatus.ok = false\n        dbStatus.status = 'connection failed'\n        dbStatus.debug = err\n      })\n    return {\n      db: dbStatus,\n      app: new ServiceStatus(),\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AuthController.html":{"url":"controllers/AuthController.html","title":"controller - AuthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AuthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                auth\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Async\n                                signin\n                            \n                            \n                                    \n                                signup\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        Async\n                        signin\n                        \n                    \n                \n            \n            \n                \n                    \n                    signin(dto: AuthDto, res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @HttpCode(HttpStatus.OK)@Post('signin')\n                \n            \n\n            \n                \n                    Defined in src/auth/auth.controller.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dto\n                                    \n                                                AuthDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        signup\n                        \n                    \n                \n            \n            \n                \n                    \n                    signup(dto: AuthDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('signup')\n                \n            \n\n            \n                \n                    Defined in src/auth/auth.controller.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dto\n                                    \n                                                AuthDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, HttpCode, HttpStatus, Post, Res } from '@nestjs/common'\nimport { AuthService } from './auth.service'\nimport { AuthDto } from './dto'\nimport { Response } from 'express'\nimport { ConfigService } from '@nestjs/config'\n\n@Controller('auth')\nexport class AuthController {\n  constructor(private authService: AuthService, private config: ConfigService) {}\n\n  @Post('signup')\n  signup(@Body() dto: AuthDto) {\n    return this.authService.signup(dto)\n  }\n\n  @HttpCode(HttpStatus.OK)\n  @Post('signin')\n  async signin(@Body() dto: AuthDto, @Res() res: Response) {\n    const token = await this.authService.signin(dto)\n\n    /*    res.cookie('user', dto.email, { //TODO:\n      // Set cookie options here (e.g., expiration, domain, path, etc.)\n      maxAge: 3600000, // Cookie expiration time in milliseconds (1 hour)\n      httpOnly: true, // Cookie accessible only through HTTP(S) requests\n      secure: true, // Cookie sent only over HTTPS if true\n      signed: true,\n    })*/\n    // const cookies = req.cookies; //TODO: middle ware to clear the cookies when signin\n    // TODO: utility function to clear and set cookie\n    // for (let cookieName in cookies) {\n    //   res.clearCookie(cookieName); // Replace '.your-domain.com' with your actual domain\n    // }\n    res.clearCookie('token')\n    res.cookie('token', token.access_token, {\n      maxAge: this.config.get('JWT_SECRET') * 1000 || 60 * 60 * 1000,\n      secure: true,\n      httpOnly: true,\n      // signed: true,\n    })\n\n    res.send(token)\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AuthDto.html":{"url":"classes/AuthDto.html","title":"class - AuthDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AuthDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dto/auth.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                email\n                            \n                            \n                                    \n                                    \n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEmail()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/auth.dto.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsStrongPassword()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/auth.dto.ts:10\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsEmail, IsNotEmpty, IsStrongPassword } from 'class-validator'\n\nexport class AuthDto {\n  @IsEmail()\n  @IsNotEmpty()\n  email: string\n\n  @IsStrongPassword()\n  @IsNotEmpty()\n  password: string\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_AuthModule_imports\n\n\n\n\nPrismaModule\n\nPrismaModule\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nPrismaModule->AuthModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/auth/auth.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthService\n                        \n                        \n                            JwtStrategy\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AuthController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            PrismaModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common'\nimport { AuthController } from './auth.controller'\nimport { AuthService } from './auth.service'\nimport { JwtModule } from '@nestjs/jwt'\nimport { PrismaModule } from '../prisma/prisma.module'\nimport { JwtStrategy } from './strategy'\n\n@Module({\n  imports: [JwtModule.register({}), PrismaModule],\n  controllers: [AuthController],\n  providers: [AuthService, JwtStrategy],\n})\nexport class AuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                signin\n                            \n                            \n                                    Async\n                                signToken\n                            \n                            \n                                    Async\n                                signup\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService, jwt: JwtService, config: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/auth.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jwt\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        signin\n                        \n                    \n                \n            \n            \n                \n                    \n                    signin(dto: AuthDto)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dto\n                                    \n                                                AuthDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        signToken\n                        \n                    \n                \n            \n            \n                \n                    \n                    signToken(userId: number, email: string)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:61\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        signup\n                        \n                    \n                \n            \n            \n                \n                    \n                    signup(dto: AuthDto)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dto\n                                    \n                                                AuthDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ForbiddenException, Injectable } from '@nestjs/common'\nimport { PrismaService } from '../prisma/prisma.service'\nimport { AuthDto } from './dto'\nimport { PrismaClientKnownRequestError, PrismaClientUnknownRequestError } from '@prisma/client/runtime'\nimport * as argon from 'argon2'\nimport { JwtService } from '@nestjs/jwt'\nimport { ConfigService } from '@nestjs/config'\n\n@Injectable()\nexport class AuthService {\n  constructor(private prisma: PrismaService, private jwt: JwtService, private config: ConfigService) {}\n\n  async signup(dto: AuthDto) {\n    const hash = await argon.hash(dto.password)\n\n    try {\n      const user = await this.prisma.user.create({\n        data: {\n          email: dto.email,\n          hash: hash,\n        },\n        select: {\n          //FIXME: use transformers\n          id: true,\n          email: true,\n          createdAt: true,\n          updatedAt: true,\n        },\n      })\n      return user\n    } catch (error) {\n      console.error({\n        code: error.code,\n        error,\n      })\n      if (error instanceof PrismaClientKnownRequestError || PrismaClientUnknownRequestError) {\n        if (error.code == 'P2002') {\n          throw new ForbiddenException('credentials taken')\n        }\n      }\n      throw error\n    }\n  }\n\n  async signin(dto: AuthDto) {\n    const user = await this.prisma.user.findUnique({\n      where: {\n        email: dto.email,\n      },\n    })\n\n    if (!user) throw new ForbiddenException('incorrect credentials')\n\n    const pwMatches = await argon.verify(user.hash, dto.password)\n\n    if (!pwMatches) throw new ForbiddenException('invalid credentials')\n\n    return this.signToken(user.id, user.email)\n  }\n\n  async signToken(userId: number, email: string) {\n    const payload = {\n      sub: userId,\n      email,\n    }\n    const secret = this.config.get('JWT_SECRET')\n\n    return {\n      access_token: await this.jwt.signAsync(payload, {\n        expiresIn: '1hr', //TODO:\n        secret: secret,\n      }),\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateScheduleDto.html":{"url":"classes/CreateScheduleDto.html","title":"class - CreateScheduleDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateScheduleDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/schedule/dto/create-schedule.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CreateScheduleDto {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/EditUserDto.html":{"url":"classes/EditUserDto.html","title":"class - EditUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  EditUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/dto/edit-user.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Optional\n                                email\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                firstName\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                lastName\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEmail()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/dto/edit-user.dto.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        firstName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/dto/edit-user.dto.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        lastName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/dto/edit-user.dto.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsEmail, IsOptional, IsString } from 'class-validator'\n\nexport class EditUserDto {\n  @IsEmail()\n  @IsOptional()\n  email?: string\n\n  @IsString()\n  @IsOptional()\n  firstName?: string\n\n  @IsString()\n  @IsOptional()\n  lastName?: string\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/JwtGuard.html":{"url":"classes/JwtGuard.html","title":"class - JwtGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  JwtGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/guard/jwt.guard.ts\n        \n\n\n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/auth/guard/jwt.guard.ts:3\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { AuthGuard } from '@nestjs/passport'\n\nexport class JwtGuard extends AuthGuard('jwt') {\n  constructor() {\n    super()\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtStrategy.html":{"url":"injectables/JwtStrategy.html","title":"injectable - JwtStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JwtStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/strategy/jwt.strategy.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                jwtConstants\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Static\n                                extractJWTFromCookie\n                            \n                            \n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config: ConfigService, prisma: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/strategy/jwt.strategy.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Static\n                        extractJWTFromCookie\n                        \n                    \n                \n            \n            \n                \n                    \n                    extractJWTFromCookie(req: RequestType)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/strategy/jwt.strategy.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            RequestType\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     string | null\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        validate\n                        \n                    \n                \n            \n            \n                \nvalidate(payload: literal type)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/strategy/jwt.strategy.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     { userId: number; email: string; }\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        jwtConstants\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/auth/strategy/jwt.strategy.ts:10\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common'\nimport { PassportStrategy } from '@nestjs/passport'\nimport { ExtractJwt, Strategy } from 'passport-jwt'\nimport { ConfigService } from '@nestjs/config'\nimport { PrismaService } from '../../prisma/prisma.service'\nimport { Request as RequestType } from 'express'\n\n@Injectable()\nexport class JwtStrategy extends PassportStrategy(Strategy, 'jwt') {\n  private jwtConstants: any\n\n  constructor(private config: ConfigService, private prisma: PrismaService) {\n    const mode = config.get('MODE') || 'dev'\n    super({\n      jwtFromRequest: ExtractJwt.fromExtractors([JwtStrategy.extractJWTFromCookie, ExtractJwt.fromAuthHeaderAsBearerToken()]),\n      ignoreExpiration: mode == 'dev' || mode == 'test',\n      secretOrKey: config.get('JWT_SECRET'),\n    })\n  }\n\n  validate(payload: { sub: number; email: string }) {\n    const user = this.prisma.user.findUnique({\n      where: {\n        id: payload.sub,\n      },\n    })\n    if (!user) return null //throws the 401 error\n\n    return { userId: payload.sub, email: payload.email }\n    // whatever is returned is appended to req.user\n  }\n  private static extractJWTFromCookie(req: RequestType): string | null {\n    const tokenField = 'token'\n    console.debug(req.cookies)\n    if (req.cookies && tokenField in req.cookies && req.cookies[tokenField].length > 0) {\n      console.log('extracted cookie')\n      return req.cookies.token\n    }\n    return null\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PrismaModule.html":{"url":"modules/PrismaModule.html","title":"module - PrismaModule","body":"\n                   \n\n\n\n\n    Modules\n    PrismaModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_PrismaModule\n\n\n\ncluster_PrismaModule_providers\n\n\n\ncluster_PrismaModule_exports\n\n\n\n\nPrismaService \n\nPrismaService \n\n\n\nPrismaModule\n\nPrismaModule\n\nPrismaService  -->\n\nPrismaModule->PrismaService \n\n\n\n\n\nPrismaService\n\nPrismaService\n\nPrismaModule -->\n\nPrismaService->PrismaModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/prisma/prisma.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PrismaService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            PrismaService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Global, Module } from '@nestjs/common'\nimport { PrismaService } from './prisma.service'\n\n@Global()\n@Module({\n  providers: [PrismaService],\n  exports: [PrismaService],\n})\nexport class PrismaModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PrismaService.html":{"url":"injectables/PrismaService.html","title":"injectable - PrismaService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PrismaService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/prisma/prisma.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    PrismaClient\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                cleanDb\n                            \n                            \n                                    Async\n                                enableShutdownHooks\n                            \n                            \n                                    Async\n                                onModuleInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/prisma/prisma.service.ts:25\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        cleanDb\n                        \n                    \n                \n            \n            \n                \ncleanDb()\n                \n            \n\n\n            \n                \n                    Defined in src/prisma/prisma.service.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        enableShutdownHooks\n                        \n                    \n                \n            \n            \n                \n                    \n                    enableShutdownHooks(app: INestApplication)\n                \n            \n\n\n            \n                \n                    Defined in src/prisma/prisma.service.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    app\n                                    \n                                            INestApplication\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        onModuleInit\n                        \n                    \n                \n            \n            \n                \n                    \n                    onModuleInit()\n                \n            \n\n\n            \n                \n                    Defined in src/prisma/prisma.service.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { INestApplication, Injectable, OnModuleInit } from '@nestjs/common'\nimport { PrismaClient } from '@prisma/client'\nimport { ConfigService } from '@nestjs/config'\n\n@Injectable()\nexport class PrismaService extends PrismaClient implements OnModuleInit {\n  // FIXME doesn't work for e2e OnModuleDestroy{\n  // https://docs.nestjs.com/fundamentals/lifecycle-events\n\n  async onModuleInit() {\n    console.info(new Date(), 'connecting to the database')\n    await this.$connect()\n  }\n\n  // async onModuleDestroy() {\n  //   console.warn(new Date(), 'disconnecting the database')\n  //   await this.$disconnect()\n  //   console.info(new Date(), 'disconnected database')\n  // }\n\n  async enableShutdownHooks(app: INestApplication) {\n    this.$on('beforeExit', async () => {\n      await app.close()\n    })\n  }\n  constructor(config: ConfigService) {\n    const sslcert = '?sslcert=root.crt'\n    //https://www.prisma.io/docs/concepts/database-connectors/postgresql#configuring-an-ssl-connection\n    super({\n      datasources: {\n        db: {\n          url: config.get('DATABASE_URL') + sslcert,\n        },\n      },\n    })\n  }\n\n  cleanDb() {\n    return this.$transaction([\n      //tear down logic\n      this.user.deleteMany(),\n    ])\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Schedule.html":{"url":"classes/Schedule.html","title":"class - Schedule","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Schedule\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/schedule/entities/schedule.entity.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Schedule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ScheduleController.html":{"url":"controllers/ScheduleController.html","title":"controller - ScheduleController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ScheduleController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/schedule/schedule.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                schedule\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                create\n                            \n                            \n                                    \n                                findAll\n                            \n                            \n                                    \n                                findOne\n                            \n                            \n                                    \n                                remove\n                            \n                            \n                                    \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(createScheduleDto: CreateScheduleDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n            \n                \n                    Defined in src/schedule/schedule.controller.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createScheduleDto\n                                    \n                                                CreateScheduleDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/schedule/schedule.controller.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n            \n                \n                    Defined in src/schedule/schedule.controller.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        remove\n                        \n                    \n                \n            \n            \n                \n                    \n                    remove(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n            \n                \n                    Defined in src/schedule/schedule.controller.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: string, updateScheduleDto: UpdateScheduleDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')\n                \n            \n\n            \n                \n                    Defined in src/schedule/schedule.controller.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateScheduleDto\n                                    \n                                                UpdateScheduleDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Delete, Get, Param, Patch, Post } from '@nestjs/common'\nimport { ScheduleService } from './schedule.service'\nimport { CreateScheduleDto } from './dto/create-schedule.dto'\nimport { UpdateScheduleDto } from './dto/update-schedule.dto'\n\n@Controller('schedule')\nexport class ScheduleController {\n  constructor(private readonly scheduleService: ScheduleService) {}\n\n  @Post()\n  create(@Body() createScheduleDto: CreateScheduleDto) {\n    return this.scheduleService.create(createScheduleDto)\n  }\n\n  @Get()\n  findAll() {\n    return this.scheduleService.findAll()\n  }\n\n  @Get(':id')\n  findOne(@Param('id') id: string) {\n    return this.scheduleService.findOne(+id)\n  }\n\n  @Patch(':id')\n  update(@Param('id') id: string, @Body() updateScheduleDto: UpdateScheduleDto) {\n    return this.scheduleService.update(+id, updateScheduleDto)\n  }\n\n  @Delete(':id')\n  remove(@Param('id') id: string) {\n    return this.scheduleService.remove(+id)\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ScheduleModule.html":{"url":"modules/ScheduleModule.html","title":"module - ScheduleModule","body":"\n                   \n\n\n\n\n    Modules\n    ScheduleModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ScheduleModule\n\n\n\ncluster_ScheduleModule_providers\n\n\n\n\nScheduleService\n\nScheduleService\n\n\n\nScheduleModule\n\nScheduleModule\n\nScheduleModule -->\n\nScheduleService->ScheduleModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/schedule/schedule.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ScheduleService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            ScheduleController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common'\nimport { ScheduleService } from './schedule.service'\nimport { ScheduleController } from './schedule.controller'\n\n@Module({\n  controllers: [ScheduleController],\n  providers: [ScheduleService],\n})\nexport class ScheduleModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ScheduleService.html":{"url":"injectables/ScheduleService.html","title":"injectable - ScheduleService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ScheduleService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/schedule/schedule.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                remove\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(createScheduleDto: CreateScheduleDto)\n                \n            \n\n\n            \n                \n                    Defined in src/schedule/schedule.service.ts:7\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createScheduleDto\n                                    \n                                                CreateScheduleDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n\n            \n                \n                    Defined in src/schedule/schedule.service.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/schedule/schedule.service.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n            \n                \nremove(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/schedule/schedule.service.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: number, updateScheduleDto: UpdateScheduleDto)\n                \n            \n\n\n            \n                \n                    Defined in src/schedule/schedule.service.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateScheduleDto\n                                    \n                                                UpdateScheduleDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common'\nimport { CreateScheduleDto } from './dto/create-schedule.dto'\nimport { UpdateScheduleDto } from './dto/update-schedule.dto'\n\n@Injectable()\nexport class ScheduleService {\n  create(createScheduleDto: CreateScheduleDto) {\n    return 'This action adds a new schedule'\n  }\n\n  findAll() {\n    return `This action returns all schedule`\n  }\n\n  findOne(id: number) {\n    return `This action returns a #${id} schedule`\n  }\n\n  update(id: number, updateScheduleDto: UpdateScheduleDto) {\n    return `This action updates a #${id} schedule`\n  }\n\n  remove(id: number) {\n    return `This action removes a #${id} schedule`\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ServiceStatus.html":{"url":"classes/ServiceStatus.html","title":"class - ServiceStatus","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ServiceStatus\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                debug\n                            \n                            \n                                    Public\n                                ok\n                            \n                            \n                                    Public\n                                status\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(ok: boolean, status: string, debug: any)\n                    \n                \n                        \n                            \n                                Defined in src/app.service.ts:4\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        ok\n                                                  \n                                                        \n                                                                        boolean\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        status\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        debug\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        debug\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : undefined\n                    \n                \n                    \n                        \n                                Defined in src/app.service.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        ok\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app.service.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'OK'\n                    \n                \n                    \n                        \n                                Defined in src/app.service.ts:5\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common'\nimport { PrismaService } from './prisma/prisma.service'\n\nclass ServiceStatus {\n  constructor(public ok: boolean = true, public status: string = 'OK', public debug: any = undefined) {}\n}\n\n@Injectable()\nexport class AppService {\n  constructor(private prisma: PrismaService) {}\n  getHello() {\n    return { message: 'app is up and running' }\n  }\n\n  async getHealth() {\n    const dbStatus = new ServiceStatus()\n\n    await this.prisma\n      .$connect()\n      .then(() => {\n        console.count('db connected successfully')\n      })\n      .catch((err) => {\n        console.error({ prisma: `connection failed due to ${err}` })\n        dbStatus.ok = false\n        dbStatus.status = 'connection failed'\n        dbStatus.debug = err\n      })\n    return {\n      db: dbStatus,\n      app: new ServiceStatus(),\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateScheduleDto.html":{"url":"classes/UpdateScheduleDto.html","title":"class - UpdateScheduleDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateScheduleDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/schedule/dto/update-schedule.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types'\nimport { CreateScheduleDto } from './create-schedule.dto'\n\nexport class UpdateScheduleDto extends PartialType(CreateScheduleDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UserController.html":{"url":"controllers/UserController.html","title":"controller - UserController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UserController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/user.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                users\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Async\n                                deleteUser\n                            \n                            \n                                    \n                                    \n                                editUser\n                            \n                            \n                                    \n                                    \n                                getMe\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        Async\n                        deleteUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteUser(userId: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtGuard)@Delete()\n                \n            \n\n            \n                \n                    Defined in src/user/user.controller.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        editUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    editUser(userId: number, dto: EditUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtGuard)@Patch()\n                \n            \n\n            \n                \n                    Defined in src/user/user.controller.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    dto\n                                    \n                                                EditUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        getMe\n                        \n                    \n                \n            \n            \n                \n                    \n                    getMe(user: User)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtGuard)@Get('me')\n                \n            \n\n            \n                \n                    Defined in src/user/user.controller.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                            User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     User\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Delete, Get, Patch, UseGuards } from '@nestjs/common'\nimport { JwtGuard } from '../auth/guard'\nimport { GetUser } from '../auth/decorator'\nimport { User } from '@prisma/client'\nimport { EditUserDto } from './dto'\nimport { UserService } from './user.service'\n\n@Controller('users')\nexport class UserController {\n  constructor(private userService: UserService) {}\n\n  @UseGuards(JwtGuard)\n  @Get('me')\n  getMe(@GetUser() user: User) {\n    return user\n  }\n\n  @UseGuards(JwtGuard)\n  @Patch()\n  editUser(@GetUser('userId') userId: number, @Body() dto: EditUserDto) {\n    //needs service\n    // we will get something in api request due to whitelist:true\n    return this.userService.editUser(userId, dto)\n  }\n\n  @UseGuards(JwtGuard)\n  @Delete()\n  async deleteUser(@GetUser('userId') userId: number) {\n    return {\n      message: 'user deleted',\n      user: await this.userService.deleteUser(userId),\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UserModule.html":{"url":"modules/UserModule.html","title":"module - UserModule","body":"\n                   \n\n\n\n\n    Modules\n    UserModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UserModule\n\n\n\ncluster_UserModule_imports\n\n\n\ncluster_UserModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nUserModule\n\nUserModule\n\nUserModule -->\n\nAuthModule->UserModule\n\n\n\n\n\nPrismaModule\n\nPrismaModule\n\nUserModule -->\n\nPrismaModule->UserModule\n\n\n\n\n\nUserService\n\nUserService\n\nUserModule -->\n\nUserService->UserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/user/user.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            UserService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UserController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            PrismaModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common'\nimport { UserController } from './user.controller'\nimport { UserService } from './user.service'\nimport { AuthModule } from '../auth/auth.module'\nimport { PrismaModule } from '../prisma/prisma.module'\n\n@Module({\n  imports: [AuthModule, PrismaModule],\n  controllers: [UserController],\n  providers: [UserService],\n})\nexport class UserModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserService.html":{"url":"injectables/UserService.html","title":"injectable - UserService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/user.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                deleteUser\n                            \n                            \n                                    Async\n                                editUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in src/user/user.service.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        deleteUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteUser(userId: number)\n                \n            \n\n\n            \n                \n                    Defined in src/user/user.service.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        editUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    editUser(userId: number, dto: EditUserDto)\n                \n            \n\n\n            \n                \n                    Defined in src/user/user.service.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    dto\n                                    \n                                                EditUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common'\nimport { PrismaService } from '../prisma/prisma.service'\nimport { EditUserDto } from './dto'\n\n@Injectable()\nexport class UserService {\n  constructor(private prisma: PrismaService) {}\n\n  async editUser(userId: number, dto: EditUserDto) {\n    console.log({ userId, dto })\n    const user = await this.prisma.user.update({\n      where: {\n        id: userId,\n      },\n      data: {\n        ...dto,\n      },\n    })\n\n    delete user.hash\n    return user\n  }\n\n  async deleteUser(userId: number) {\n    const user = await this.prisma.user.delete({\n      where: {\n        id: userId,\n      },\n    })\n\n    delete user.hash\n    return user\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app.module.ts\n            \n            variable\n            envFile\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app.module.ts\n            \n            variable\n            mode\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            class\n            ServiceStatus\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/auth/auth.controller.ts\n            \n            controller\n            AuthController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/auth/decorator/get-user.decorator.ts\n            \n            variable\n            GetUser\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/dto/auth.dto.ts\n            \n            class\n            AuthDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/guard/jwt.guard.ts\n            \n            class\n            JwtGuard\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/auth/strategy/jwt.strategy.ts\n            \n            injectable\n            JwtStrategy\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/prisma/prisma.service.ts\n            \n            injectable\n            PrismaService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/schedule/dto/create-schedule.dto.ts\n            \n            class\n            CreateScheduleDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/schedule/dto/update-schedule.dto.ts\n            \n            class\n            UpdateScheduleDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/schedule/entities/schedule.entity.ts\n            \n            class\n            Schedule\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/schedule/schedule.controller.ts\n            \n            controller\n            ScheduleController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/schedule/schedule.service.ts\n            \n            injectable\n            ScheduleService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/user/dto/edit-user.dto.ts\n            \n            class\n            EditUserDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/user/user.controller.ts\n            \n            controller\n            UserController\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/user/user.service.ts\n            \n            injectable\n            UserService\n            \n                0 %\n                (0/4)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @apollo/server : ^4.7.5\n        \n            @nestjs/apollo : ^12.0.7\n        \n            @nestjs/cache-manager : ^2.0.1\n        \n            @nestjs/common : ^10.0.5\n        \n            @nestjs/config : ^3.0.0\n        \n            @nestjs/core : ^10.0.5\n        \n            @nestjs/graphql : ^12.0.8\n        \n            @nestjs/jwt : ^10.1.0\n        \n            @nestjs/mapped-types : ^2.0.2\n        \n            @nestjs/passport : ^10.0.0\n        \n            @nestjs/platform-express : ^10.0.5\n        \n            @prisma/client : ^4.16.2\n        \n            @solana/web3.js : ^1.78.0\n        \n            argon2 : ^0.30.3\n        \n            cache-manager : ^5.2.3\n        \n            class-transformer : ^0.5.1\n        \n            class-validator : ^0.14.0\n        \n            compression : ^1.7.4\n        \n            cookie-parser : ^1.4.6\n        \n            graphql : ^15.7.2\n        \n            graphql-iso-date : ^3.6.1\n        \n            graphql-subscriptions : ^1.2.1\n        \n            graphql-tools : ^9.0.0\n        \n            joi : ^17.9.2\n        \n            passport : ^0.6.0\n        \n            passport-jwt : ^4.0.1\n        \n            prisma-nestjs-graphql : ^18.0.2\n        \n            reflect-metadata : ^0.1.13\n        \n            rxjs : 7.8.1\n        \n            ts-morph : ^19.0.0\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\napi.scheduler.nas\nInspiration\nDuring my college years, I found that teachers, students & myself would often have to stand outside the\ndean's office for long hours. I found this very disturbing as a Computer Science Engineering Student. I saw the potential of\na software scheduler that would make everyone's life easy.\nDescription\nScheduler RESTFul API Server built using  , TypeScript, Prisma, Graphql and PostgreSQL.\nBuilt with ❤️on top of\n\n Typescript\n NestJS\n Prisma\n Passport.js\n Graphql:Schema First\n PostgreSQL\n\nAbout Task Management\nFunctional specs\nTask management allows users to register, create tasks and manage them, major features are\n\nUser SignUp & SignIn\nCreate Tasks which are visible only to the logged in users\nNew created tasks will be in OPEN status\nUpdate task status to IN_PROGRESS or DONE\nDelete tasks\n\nTechnical methodologies followed\n\nModular architecture: Tasks & Auth handled in separate modules, separating concerns.\nHTTP requests are handled by Controllers\nAPI documentation using nest/swagger module\nBusiness logic is implemented in Services\nDatabase interactions are handled in Repository classes using TypeORM\nValidation using NestJS Pipes\nData Transfer Object(DTO) pattern for transferring data between layers\nConfiguration management using .env files for development, test & prod configs\nAuthentication / Authorization, Task ownership by users\nPassportJS, JWT tokens, Password hashing, salts\nUnit tests using Jest\nSupertest for E2E testing\n\nTechnical documentation using Compodoc\nAs NestJS is heavily inspired by Angular, we can generate the documentation about project structure modules, controllers, services etc. I\nhave generated the docs.\nFind 'em here - https://web3mustketeers.github.io/api.taskmon.ai/\nInstallation\nnpm install -g pnpm\npnpm installRunning the app\nPrerequisite for running the app in any mode - dev/test/prod\n\nCopy .env.example with .env\nFill in the env vars in .env\n\n# development\n$ pnpm run start\n\n# watch mode\n$ pnpm run start:dev\n\n# production mode\n$ pnpm run start:prodTest\n# unit tests\n$ pnpm run test\n\n# e2e tests\n$ pnpm run test:e2e\n\n# test coverage\n$ pnpm run test:covLicense\nThis repo is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nMIT License\nCopyright (c) 2023 Nasfame\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PrismaModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ScheduleModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UserModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_PrismaModule\n\n\n\ncluster_PrismaModule_exports\n\n\n\ncluster_PrismaModule_providers\n\n\n\ncluster_ScheduleModule\n\n\n\ncluster_ScheduleModule_providers\n\n\n\ncluster_UserModule\n\n\n\ncluster_UserModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nUserModule\n\nUserModule\n\nUserModule -->\n\nAuthModule->UserModule\n\n\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nPrismaModule\n\nPrismaModule\n\nAuthModule -->\n\nPrismaModule->AuthModule\n\n\n\nUserModule -->\n\nPrismaModule->UserModule\n\n\n\nAppModule -->\n\nPrismaModule->AppModule\n\n\n\n\n\nPrismaService \n\nPrismaService \n\nPrismaService  -->\n\nPrismaModule->PrismaService \n\n\n\n\n\nScheduleModule\n\nScheduleModule\n\nAppModule -->\n\nScheduleModule->AppModule\n\n\n\nAppModule -->\n\nUserModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nPrismaService\n\nPrismaService\n\nPrismaModule -->\n\nPrismaService->PrismaModule\n\n\n\n\n\nScheduleService\n\nScheduleService\n\nScheduleModule -->\n\nScheduleService->ScheduleModule\n\n\n\n\n\nUserService\n\nUserService\n\nUserModule -->\n\nUserService->UserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        5 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    4 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    6 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    7 Classes\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.1.0\n        \n            Description : API Server of api.scheduler.nas\n        \n            Homepage : https://github.com/jsFame/api.scheduler.nas\n        \n            Bugs : https://github.com/jsFame/api.scheduler.nas/issues\n        \n            License : MIT\n        \n            Repository : https://github.com/jsFame/api.scheduler.nas\n        \n            Author : laciferin@gmail.com\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            envFile   (src/.../app.module.ts)\n                        \n                        \n                            GetUser   (src/.../get-user.decorator.ts)\n                        \n                        \n                            mode   (src/.../app.module.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app.module.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        envFile\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '.env'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mode\n                        \n                    \n                \n            \n                \n                    \n                        Default value : process.env.MODE\n                    \n                \n\n\n        \n    \n\n    src/auth/decorator/get-user.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        GetUser\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createParamDecorator((data: string | undefined, ctx: ExecutionContext) => {\n  const request = ctx.switchToHttp().getRequest()\n\n  if (data) return request.user[data]\n\n  return request.user\n})\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
